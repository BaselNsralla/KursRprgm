
<style type="text/css">

.indent {
  padding-left: 2em !important;
}

.emphasize {
  text-align: center;
  width: 100%;
  color: red;
  font-weight:bold;
  line-height:400%;
}

.sep {
  line-height:400%;
}

.large {
  font-size: 1.2em !important;
  line-height: 64px !important;
}

.reveal section del {
  color: red;
  font-weight:bold;
  width: 100%;
}

</style>

Programmering i R
========================================================
transition: rotate
## Föreläsning 8: ggplot2 och spatiala data
### [Måns Magnusson](mailto:mans.magnusson@liu.se)

Avdelningen för statistik,
Linköpings universitet

Dagens föreläsning:
========================================================
- inför tentamen
- ggplot2
- spatiala data
- miniprojekt

Laboration D6
========================================================
- `suppressPackageStartupMessages()`
- lubridate för att plotta mot tid

Laboration D7
========================================================

## goo.gl/z3IvEr

Inför tentamen
========================================================
incremental: true

- Tenta i datorsal (4 h)
- Tentan kommer likna de gamla tentorna, som ni hittar [[här]](https://github.com/MansMeg/KursRprgm/tree/master/OldExams)
- Hjälpmedel: 
  - Den inbyggda hjälpen i R (ej internet)
  - R reference card v.2 av Matt Baggot, laddas ner [[här]](http://cran.r-project.org/doc/contrib/Baggott-refcard-v2.pdf), 
- Tenta och material får ni tillgång till elektroniskt - ta inte med något
- Ett specifikt användarnamn och lösenord per tentand.

ggplot2
========================================================
type: section

ggplot2
========================================================
- Baserad på "Grammar of Gaphics" av Leland Wilkinson
- Skapad av Hadley Wickham
- Alternativ till basgrafiken
- [http://ggplot2.org](http://ggplot2.org)
- Har egenskapar från basgrafiken men skiljer sig
- Utgår alltid från en ```data.frame```

ggplot2
========================================================
"Grammatik för grafik"
- Abstraktioner av grafiska idéer. Jmf med ordklasser/satsdelar i språk
- Ger ett teoretiskt fundament för hur grafik kan skapas
- Fördjupning: http://ggplot2.org/book/ 

ggplot2
========================================================

> ”In brief, the grammar tells us that a statistical graphic is a mapping from data to aesthetic attributes (colour, shape, size) of geometric objects (points, lines, bars). The plot may also contain statistical transformations of the data and is drawn on a specific coordinate system.”

Från "ggplot2" av Hadley Wickham 

ggplot2
========================================================
incremental: true

- Bygger upp en graf av flera delar
  - ```data``` (data.frame)
  - ```geom```
  - ```aes```
- Lägger "lager på lager"

geom
========================================================

- Vilken geometrisk representation ska användas

```geom``` | Beskrivning | 
----- | ---- | 
```geom_point``` | Scatterplot |
```geom_line``` | Line graph |
```geom_bar``` | Barplot |
```geom_boxplot``` | Boxplot |
```geom_histogram``` | Histogram |

aes
========================================================
- Kopplar färg, form och utseende till data

```aes``` | Beskrivning | 
----- | ---- | 
```x``` | x-axel |
```y``` | y-axel |
```size``` | storlek |
```colour``` | färg |
```shape``` | form |

aes och geoms
========================================================
- Finns även speciella aestetics för viss geoms

```geom``` | ```aes``` | 
----- | ---- |
```geom_points``` | point shape, point size |
```geom_line``` | line type, line size |
```geom_bar``` |   y min, y max, fill color, outline color |

Exempel
========================================================
```{r, echo=TRUE}
library(ggplot2)
data(Nile)
Nile <- as.data.frame(Nile) 
colnames(Nile) <- "level"
Nile$years <- 1871:1970
Nile$period <- "- 1900" 
Nile$period[Nile$years >= 1900] <- "1900 - 1945"
Nile$period[Nile$years > 1945] <- "1945 + " 
Nile$period <- as.factor(Nile$period)
```

Exempel
========================================================
```{r, echo=TRUE}
plt <- ggplot(data=Nile) + aes(x=years, y=level) + geom_point()
plt
```

Exempel
========================================================
```{r, echo=TRUE}
plt <- ggplot(data=Nile) + aes(x=years, y=level) + geom_line()
plt
```

Exempel
========================================================
```{r, echo=TRUE}
plt <- ggplot(data=Nile) + aes(x=years, y=level, colour=period) + 
  geom_line(aes(type=period)) + geom_point(aes(shape=period))
plt
```

Teman
========================================================
- En av styrkorna med `ggplot2`
- Bästa sättet att styra färgsättning och utseende
- Paketet `ggthemes` innehåller många teman

Exempel: Teman
========================================================
```{r, echo=TRUE}
plt + theme_bw()
```

Exempel: Teman
========================================================
```{r, echo=TRUE}
library(ggthemes)
plt + theme_tufte()
```

Exempel: Teman
========================================================
```{r, echo=TRUE}
plt + theme_excel()
```

Exempel: Teman
========================================================
```{r, echo=TRUE}
plt + theme_economist()
```

Exempel: Teman
========================================================
```{r, echo=TRUE}
plt + theme_stata()
```

Spatiala data
========================================================
type: section

Spatiala data
========================================================
incremental: true

> Also known as geospatial data or geographic information it is the data or information that identifies the geographic location of features and boundaries on Earth

- Kallas också ofta
  - Geografiska informationssystem (GIS)
  - Kartor, geotaggad data
- Tvådimensionella data
- Spatial **analys** kommer senare
- Speciellt med spatiala data
  - Speciella datastrukturer
  - Projektioner

Projektioner
========================================================

- Vårt problem: Jorden är rund
- Behöver använda projektioner: från 3 till 2 dimensioner
- Alla projektioner ger felaktigheter
- Lägre skala ger mindre projektionsfel
- Mer information finns här [**[här]**](http://www.lantmateriet.se/Kartor-och-geografisk-information/GPS-och-geodetisk-matning/Om-geodesi/Kartprojektioner/Kartprojektionens-grunder/)

Skapa kartor
========================================================
- Många karttjänster finns att använda gratis
  - Google Maps
  - Open Street map
- För att skapa kartor används ```ggmap()``` i paketet `ggmap`
- Anger en koordinat och zoom
- Bygger på longitud och latitud

Skapa kartor
========================================================
```{r}
library(ggmap)
qmap("Linkoping", zoom=15)
```

Visualisera data på karta
========================================================
- Kräver att vi har samma koordinatsystem (latitud och longitud)
- ```geocode()``` kan användas för att skapa kooridinater från adresser

```{r, eval=FALSE}
linkpg_map <- qmap("Linkoping", color="bw", zoom=15) 
df <- 
  data.frame(
    lon = jitter(rep(15.62137, 50), amount = .01), 
    lat = jitter(rep(58.41081, 50), amount = .01),
    event = sample(c("Komet", "Olycka", "Polis"), size = 50, replace = TRUE)) 
linkpg_map +   
  geom_point(aes(x = lon, y = lat, color=event), data = df)
```

Visualisera data på karta: resultat
========================================================

```{r, echo=FALSE}
linkpg_map <- qmap("Linkoping", color="bw", zoom=15)
geocode("Linkoping")
df <- 
  data.frame(
    lon = jitter(rep(15.62137, 50), amount = .01), 
    lat = jitter(rep(58.41081, 50), amount = .01),
    event = sample(c("Kometnedslag", "Olycka", "Polis"), size = 50, replace = TRUE)) 
linkpg_map +   
  geom_point(aes(x = lon, y = lat, color=event), data = df)
```


shapefiler
========================================================

- Geografiska data
  - Punkter
  - Polygoner
- shape-filer är ett standardformat [**[mer info]**](http://www.esri.com/library/whitepapers/pdfs/shapefile.pdf)
- Shapefil för Sveriges län och kommuner finns [**[här]**](https://github.com/MansMeg/KursRprgm/tree/master/Labs/DataFiles)


Arbeta och visualisera shapefiler
========================================================
- Kräver paketen ```maptools```, `rgeos` och `rgdal`.

```{r,echo=FALSE}
library(downloader)
# Download and read data 
kommuner_remote <- "https://raw.github.com/MansMeg/KursSvyMeth/master/Labs/DataFiles/Kommun_SCB.zip"
kommuner_local <- "Kommun_SCB.zip"
suppressMessages(download(kommuner_remote, destfile = kommuner_local))
unzip(kommuner_local)
```

```{r, eval=TRUE}
suppressPackageStartupMessages(library(rgdal))
swe_municip <- readOGR(dsn = "Kommun_SCB", "Kommun_SCB_07")
```

- Skapar ett ```sp``` objekt vi kan arbeta vidare med

Visualisera med base
========================================================

```{r, eval=TRUE}
plot(swe_municip)
```

Visualisera med ggplot2
========================================================

```{r, eval=FALSE}
sw <- swe_municip[stringr::str_sub(swe_municip@data$KNKOD,1,1)=="0",]
sw <- fortify(sw, region = "KNKOD")
sw <- merge(x = sw, y = swe_municip@data, by.x="id", by.y="KNKOD")

ggplot(sw, aes(x=long, y=lat, group=group, fill=KNBEF96)) + 
  geom_polygon() + geom_path(color="white") + theme_bw()
```

Visualisera med ggplot2
========================================================

```{r, eval=TRUE, echo=FALSE}
sw <- swe_municip[stringr::str_sub(swe_municip@data$KNKOD,1,1)=="0",]
sw <- fortify(sw, region = "KNKOD")
sw <- merge(x = sw, y = swe_municip@data, by.x="id", by.y="KNKOD")

ggplot(sw, aes(x=long, y=lat, group=group, fill=KNBEF96)) + 
  geom_polygon() + geom_path(color="white") + theme_bw()
```


Miniprojektet
========================================================

- Fortsätta med tidigare data (om ni vill)
- Olika analyser (t-test, linjär regression m.m.)
- Visualisera en karta/shape - fil
- Bara använda ggplot2 i del II (base i del I)
