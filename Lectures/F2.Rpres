<style type="text/css">

.indent {
  padding-left: 2em !important;
}

.emphasize {
  text-align: center; 
  width: 100%; 
  color: red; 
  font-weight:bold;
  line-height:400%;
}

.sep {
  line-height:400%;
}

.large {
  font-size: 1.2em !important;
  line-height: 64px !important;
}

.reveal section del {
  color: red;
  font-weight:bold;
  width: 100%;
}

</style>

Programering i R
========================================================
transition: rotate
## Föreläsning 2: Logik, datatyper och I/O
### [Måns Magnusson](mailto:mans.magnusson@liu.se)
Avdelningen för statistik, 
Linköpings universitet

Föreläsning 2: Innehåll 
========================================================
- Uppföljning av labb 1
- Variabeltyper
- Logik i R
- Datastrukturer
  - Vektorer
  - Matriser
  - Data.frame
  - Listor
  - Att studera datatyper i R
- Input och output (I/O) i R

Variabeltyper
========================================================
type: section

Variabeltyper
========================================================
- Olika typer av värden på variabler, ex:
  - Heltal, Numeriska värden, Textsträngar
- Kallas för atomära klasser
- För att undersöka vilken klass en variabel har används: ```typeof()```
- För att konvertera mellan klasser används ```as.``` - funktioner (finns för alla variabeltyper). Ex:
```{r}
as.character(1:5)
```

Variabeltyper, översikt
========================================================

Beskrivning | Synonymer | ```typeof()``` | Exempel i R
----- | ---- | ----- | ---- | ----
Heltal ($\mathbb{Z}$) | ```int``` | ```integer``` | ```-1, 0, 1``` 
Reella tal ($\mathbb{R}$) | ```real```, ```double```, ```float``` | ```numeric``` | ```1.03, -2.872``` 
Komplexa tal ($\mathbb{C}$) | ```cplx``` | ```complex``` | ```1 + 2i``` 
Logiska värden | ```boolean```, ```bool```, ```logi``` | ```logical``` | ```TRUE FALSE``` 
Textsträngar | ```string```, ```char``` | ```character``` |  ```Go R!``` 

Logik i R
========================================================
type: section


Kort om logik
========================================================
- Logiska värden är centralt i programmering och statistik
- De logiska värdena i R är ```TRUE, FALSE, NA```
- Logiska värden är en egen variabeltyp (med värden, vektorer, matriser)


Kort om logik II
========================================================
- Logiska variabler kan skapas med ```c()```:  
Ex: ```c(TRUE, FALSE)```
- Logiska vektorer/matriser kan användas för "slicing"
```{r}
minBool <- c(TRUE, FALSE, FALSE, TRUE)
minVektor <- c(12,1,2,7)
minVektor[minBool]
```
- Detta är mycket användbart!

Relationsoperatorer
========================================================
- Ett annat sätt är att använda relationsoperatorer
- Finns i *R reference card v.2* under operatorer
- Relationsoperatorer skapar logiska vektorer (eller matriser)

| Beskrivning | Operatorer i R |
| ----- | ---- |
| Lika med  | ```==``` |
| Inte lika med  | ```!=``` |
| Större än | ```>``` |
| Mindre än | ```<``` |
| Större än eller lika med  | ```>=``` |
| Mindre än eller lika med  | ```<=``` |
| Finns i  | ```%in%``` |

Relationsoperatorer (Exempel)
========================================================
```{r}
x <- c(1, 2, 3, 4, 5)
x != 5
x > 2
```


Logiska operatorer
========================================================
- Logiska operatorer används för att "räkna" med logiska uttryck
- De operatorer som vi kommer använda är: 

| Operator | Symbol | Operator i R |
| --- | --- | --- |
| och (and) | $\wedge$ | ```&``` |
| eller (or) | $\vee$ | $|$ |
| exklusivt eller (exclusive or) | $\veebar$ | ```xor()``` |
| icke (not) | $\neg$ | ```!``` |

Logiska operatorer (forts.)
========================================================
incremental: true

| Symbol | $A$ | $B$ | $\neg A$ | $A \wedge B$ | $A \vee B$ | $A \veebar B$ |
| --- | --- | --- | --- | --- | --- | --- |
| i R | ```A``` | ```B``` | ```!A``` | ```A & B``` | ```A``` $|$ ```B``` | ```xor(A,B)``` |
|  | ```TRUE``` | ```TRUE``` | ```FALSE``` | ```TRUE``` | ```TRUE``` | ```FALSE``` |
|  | ```TRUE``` | ```FALSE``` | ```FALSE``` | ```FALSE``` | ```TRUE``` | ```TRUE``` |
|  | ```FALSE``` | ```TRUE``` | ```TRUE``` | ```FALSE``` | ```TRUE``` | ```TRUE``` |
|  | ```FALSE``` | ```FALSE``` | ```TRUE``` | ```FALSE``` | ```FALSE``` | ```FALSE``` |

- Logiska operatorer kan kombineras med paranteser för komplicerade uttryck: 
```{r}
(FALSE & !TRUE) | xor(FALSE,TRUE)
````

Demo 03: Logiska operatorer
========================================================
## Demonstration av:
- Logiska vektorer
- Relationsoperatorer
- Slicing med logiska vektorer
- Logiska operatorer

Fil för demonstration finns [[här]](https://raw.github.com/MansMeg/KursRprgm/master/Demonstrations/demo_03.R)


Datastrukturer
========================================================
type: section

Datastrukturer
========================================================
- Hur datorn lagrar data / information
- Vi kommer använda:
  - Vektorer
  - Matriser
  - ```data.frame```
  - Listor

Vektorer
========================================================
type: sub-section

Sortera vektorer
========================================================
- Sortera vektorer ```sort()``` och ```order()```
```{r}
vektor <- c(5,2,4,3,-1)
sort(vektor)
order(vektor, decreasing = TRUE)
```

Faktorvariabel
========================================================
- Skapar dummyvariabler automatiskt vid analyser
- Sparar minnesutrymme  (jmf. med textvektorer)
- Textvektorer konverteras enkelt med ```factor()```  
- Textdata som läses in i R konverteras till ```factor``` om inte ```stringsAsFactors = FALSE```

```{r}
minFaktor <- factor(x=c(1,3,2,2,1,3), levels=1:3, labels=c("A","B","C"))
minFaktor
```

Matriser
========================================================
type: sub-section

Matriser
========================================================
- Tvådimensionell (men alla element är samma variabeltyp)  
Ex. logiska, numeriska, text
- Skapas med ```matrix()```
- Vanliga operatorer (som ```* + / %%```) sker elementvis
- Matrisoperatorer  
Ex. ```%*%```, ```t()```, ```solve()```  
- "Slicing" sker både rader och kolumner med ```[ , ]```

Data.frame
========================================================
type: sub-section


Data.frame
========================================================
- Vanligaste sättet att spara "dataset" i R
- Som matriser, men:
  - Olika kolumner kan ha olika datatyper
  - "Slicing" av variabler kan göras med variabelnamn
- Skapas med ```data.frame()```
- Oftast läser vi in dataset från filer/databaser m.m. 
- Förinstallerade dataset kan läsas in med ```data()```
- Ett specialfall av listor
- Skapa nya variabler som variabler "i" datasetet eller med ```within()```


Data.frame exempel
========================================================
```{r}
minData <- 
 data.frame(vikt=c(58,78,98), 
            namn=c("Lisa","Kim","Max"), 
            rik=c(TRUE,FALSE,FALSE))
minData$ny <- c(1,5,2)
minData
```



Listor
========================================================
type: sub-section

Listor
========================================================
- Som en vektor, men **alla** sorters objekt kan sparas
- Tänk: Ett antal lådor där data sparas
- Mycket praktiskt för att returnera flera olika objekt från en funktion.

Att studera objekt i R
========================================================
type: sub-section

Att studera datatyper i R
========================================================
- Det finns ett flertal sätt att undersöka / "titta på" datatyper i R:

| Funktion | Exempel | Kort beskrivning |
| --- | --- | --- | 
| ```summary()``` | ```summary(a)``` |Sammanfattar innehållet i ett R-objekt | 
| ```str()``` | ```str(a)``` | Visar kondenserat (en rad per objekt) alla delar i ett R-objekt | 
| ```is.``` | ```is.logical(a)``` | Testar om objektet är en given klass. | 

Demo 04: Datastrukturer
========================================================
## Demonstration av:
- Sortera vektorer
- Faktorvariabler
- Matriser
- ```data.frame```
- Listor
- Studera R-objekt

Fil för demonstration finns [[här]](https://raw.github.com/MansMeg/KursRprgm/master/Demonstrations/demo_04.R)

Input och output (I/O) i R
========================================================
type: section

Input och output (I/O) i R
========================================================
- Olika sätt att läsa in data:
  - Från filer på datorn / nätverket (.csv, .xlsx, .txt, .Rdata)
  - Från filer på webben 
  - Från databaser (SQL m.m. se [732G16](http://www.ida.liu.se/~732G16/index.sv.shtml))
  - Via API:er (ex.  [```rOpenGov```](http://ropengov.github.io/))
- Olika sätt att leverera:
  - Filer 
  - Databaser
  - Webbsidor (ex. [New york times](http://www.nytimes.com/interactive/2012/10/31/nyregion/where-the-power-is-out-and-returning.html))
  - Interaktiva webbdatabaser (ex. [Shiny](http://glimmer.rstudio.com/prenumerant/KLD_Explorer/))
  - Rapporter / analyser / texter
  
Filhantering i R
========================================================
- R läser in i internminnet, men ofta vill vi arbeta med filer från hårddisken
- R arbetar i working directory 
  - För att ta reda på sökvägen ```getwd()```
  - För att ändra sökvägen ```setwd()```
  - För att lista filer i katalogen ```dir()```
- För att snabbt och enkelt få sökvägen till en fil ```file.choose()```
- Detaljer om hur man kan manipulera kataloger och filer med R finns [[här]](http://astrostatistics.psu.edu/datasets/R/html/base/html/files.html)

Input (I) 
========================================================
För att läsa in data finns:
- ```.csv``` och ```.txt```-filer: ```read.table()```,```read.csv()```, ```read.csv2()```
- ```.Rdata```-filer: ```load()```
- För övriga datakällor finns separata paket:

| R-Paket | Filtyp |
| --- | --- |  
| ```XLconnect``` | Excel-filer (mer information finns [här](http://rwiki.sciviews.org/doku.php?id=tips%3adata-io%3ams_windows&s=excel)) |
| ```foreign``` | Filer från Epi Info, Minitab, S, SAS, SPSS, Stata, Systat and Weka |
| ```RODBC``` | Kontakta databaser från R |
| ```XML``` | XML - data |
| ```rjson``` | JSON - data  |


Output (O) 
========================================================
För att spara data från R till hårddisken finns (bland annat):
- ```.csv``` - filer: ```write.table()```,```write.csv()```, ```write.csv2()```
- ```.Rdata``` - filer: ```save()```


Demo 05: Filhantering, Input och Output (I/O) 
========================================================
## Demonstration av:
- Skapa sökvägar med ```file.choose()```
- R working directory
- Läsa in ```.csv``` - filer
- Skriva ```.csv``` - filer

Fil för demonstration finns [[här]](https://raw.github.com/MansMeg/KursRprgm/master/Demonstrations/demo_05.R)
