#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{fancyhdr}%The first page setting
\fancypagestyle{plain}
{%
  \fancyhf{} % clear all header and footer fields
  \fancyhead[L]{
    LINK\"OPING UNIVERSITY\\
    Avdelningen för Statistik\\
    Institutionen för datavetenskap
  }
  \fancyhead[R]{Programming i R}
}
%The remaining pages

\fancyhead[RO,LE]{}
\fancyhead[C]{Programming i R}
\fancyhead[LO,RE]{}

 
\end_preamble
\use_default_options false
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language swedish
\language_package none
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 0
\use_mathdots 0
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Datorlaboration 4
\end_layout

\begin_layout Author
Måns Magnusson
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<prompt=TRUE,eval=TRUE,echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Global options
\end_layout

\begin_layout Plain Layout

opts_chunk$set(comment='') 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "Intro.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Datorlaboration
\end_layout

\begin_layout Section
Mer om funktioner
\end_layout

\begin_layout Enumerate
Skapa följande funktion i R med både 
\family typewriter
{}
\family default
 och 
\family typewriter
return()
\family default
:
\begin_inset Formula 
\[
f(x,y)=x^{2}+y^{2}+z^{2}-1
\]

\end_inset


\end_layout

\begin_layout Enumerate
Vilken är den fria variabeln? Studera funktionen på följande sätt:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

f
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Skapa funktionen igen men gör det med en enda rad kod utan 
\family typewriter
{}
\family default
 eller 
\family typewriter
return()
\family default
.
\end_layout

\begin_layout Enumerate
Pröva lite olika värden på 
\family typewriter
x
\family default
 och 
\family typewriter
y
\family default
.
 Pröva att använda argumentnamnen och byt ordning på 
\family typewriter
x
\family default
 och 
\family typewriter
y
\family default
 i funktionsanropet.
 Eftersom 
\family typewriter
z
\family default
 inte är definierad, kommer funktionen inte fungera om du inte sätter 
\family typewriter
z
\family default
 till något värde.
 Pröva funktionen både före och efter du satt 
\family typewriter
z
\family default
 till ett godtyckligt värde.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

f
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Pröva nu att beräkna följande integral.
 Börja med att definiera funktionen och använd sedan funktionen 
\family typewriter
integrate()
\family default
.
\begin_inset Formula 
\[
\int_{0}^{3}\frac{1}{3}x^{2}dx
\]

\end_inset


\end_layout

\begin_layout Enumerate
Pröva nu att integrera en exponentialfördelnings täthetsfunktion med 
\begin_inset Formula $E(X)=1$
\end_inset

 mellan 0 och 1:
\begin_inset Formula 
\[
\int_{0}^{1}f_{X}(x)dx
\]

\end_inset

D.v.s.
 vilken sannolikhetsmassa finns mellan 0 och en exponentialfördelnings medelvärd
e.
 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "Här"
target "http://en.wikipedia.org/wiki/Exponential_distribution"

\end_inset


\series default
\color inherit
 finns exponentialfördelningens täthetsfunktion.
 
\series bold
Obs!
\series default
 
\begin_inset Formula $E(X)=\frac{1}{\lambda}$
\end_inset


\end_layout

\begin_layout Enumerate
Gör om uppgift oven, men använd lägg till argumentet 
\family typewriter
lambda
\family default
 i funktionen som integreras.
 Sätt argumentet 
\family typewriter
lambda
\family default
 till 1 som standard.
 Prova om du får samma resultat som ovan.
 
\end_layout

\begin_layout Enumerate
Pröva att använda din nya genom att numeriskt integrera följande funktion
 där 
\begin_inset Formula $f_{X}(x)$
\end_inset

 är en exponentialfunktion med 
\begin_inset Formula $E(X)=5$
\end_inset

.
 I funktionen 
\family typewriter
integrate()
\family default
 finns 
\family typewriter
...

\family default
 för godtyckliga argument som ska skickas till din funktion.
 Pröva att på så sätt ändra värdet på 
\family typewriter
lambda
\family default
 när du integrerar numeriskt.
\begin_inset Formula 
\[
\int_{0}^{5}f_{X}(x)dx
\]

\end_inset


\end_layout

\begin_layout Subsection
Globala och lokala miljöer i R
\end_layout

\begin_layout Enumerate
Skapa följande funktion och pröva denna kod: 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

c <- function(x,y){
\end_layout

\begin_layout Plain Layout

	x + y
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Den funktion vi brukar använda för att skapa vektorer kallas också 
\family typewriter
c()
\family default
.
 Vilken funktion är det som används om du anropar funktionen 
\family typewriter
c
\family default
 nu? 
\end_layout

\begin_layout Enumerate
R följer en given sökväg för när funktionen 
\family typewriter
c
\family default
 anropas.
 Studera hur sökvägen ser ut med search().
 För att titta i vilken namespace den funktion du just skapat ligger pröva
 funktionen 
\family typewriter
environment()
\family default
.
 För att ta reda på var den gamla funktionen (för att skapa en vektor) ligger,
 titta i hjälpen efter 
\family typewriter
c
\family default
.
 Högst upp till vänster ska det stå i vilken namespace funktionen ligger.
 Är den namespace där din skapade funktion ligger tidigare i R:s sökväg
 än den gamla 
\family typewriter
c
\family default
-funktionen?
\end_layout

\begin_layout Enumerate
Pröva nu att anropa den gamla c-funktionen med hjälp av 
\family typewriter
::
\family default
 direkt från den namespace den gamla funktionen 
\family typewriter
c
\family default
 ligger i.
\end_layout

\begin_layout Enumerate
Ta nu bort din 
\family typewriter
c
\family default
 - funktion med 
\family typewriter
rm(c)
\family default
.
\end_layout

\begin_layout Enumerate
Skapa nu följande funktionen nedan.
 Vilken variabel är en så kallad fri variabel?
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

f <- function(x){
\end_layout

\begin_layout Plain Layout

	(x + y)^2 - 1
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Pröva först att använda funktionen utan att ge 
\family typewriter
y
\family default
 ett värde (eller om den finns i global enviroment, ta bort den).
 Fungerar funktionen 
\family typewriter
f
\family default
? Pröva att ge variabeln 
\family typewriter
y
\family default
 ett värde.
 Fungerar funktionen nu?
\end_layout

\begin_layout Enumerate
R söker efter värden på fria variabler på samma sätt som R söker efter funktione
r när ett funktionsnamn anropas.
 Dock påbörjar sökningen efter fria variabler i den miljö där funktionen
 är definierad.
 Skapa koden nedan, vad gör funktionen?
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

y <- 5
\end_layout

\begin_layout Plain Layout

g <- function(x){
\end_layout

\begin_layout Plain Layout

  y <- 10
\end_layout

\begin_layout Plain Layout

  # f here
\end_layout

\begin_layout Plain Layout

  print(environment(f))
\end_layout

\begin_layout Plain Layout

  output <- f(x)
\end_layout

\begin_layout Plain Layout

  return(output)
\end_layout

\begin_layout Plain Layout

} 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Pröva att istället definiera funktionen 
\family typewriter
f
\family default
 inne i funktionen som markerats med en kommentar.
 Vad blir skillnaden om du nu kör 
\family typewriter
g()
\family default
?
\end_layout

\begin_layout Enumerate
Prova att använda funktionen 
\family typewriter
assign()
\family default
 för att göra följande operation:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

svar <- 42
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Pröva att med 
\family typewriter
assign()
\family default
 skapa variablerna 
\family typewriter
svar1
\family default
, 
\family typewriter
svar2
\family default
, 
\family typewriter
svar3
\family default
, ..., 
\family typewriter
svar10
\family default
 med en 
\family typewriter
for
\family default
 loop.
 Varje svar (1 till 10) ska vara 42.
\end_layout

\begin_layout Enumerate
Vi ska nu skapa en funktion du kallar 
\family typewriter
minianalys()
\family default
 som tar en godtycklig numerisk vektor och skriver ut vektorns medelvärde,
 standardavvikelse och kvantiler till skärmen.
 Pröva funktionen på vektorerna nedan: [
\series bold
Tips!
\series default
 
\family typewriter
quantile()
\family default
] 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

utanNA <- 1:100
\end_layout

\begin_layout Plain Layout

medNA <- c(rep(NA,10),11:100)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Samtliga de funktioner inne i 
\family typewriter
minianalys()
\family default
 kan ta argumentet na.rm för att rensa bort NA innan beräkningar görs.
 Använd ellipsis-argumentet 
\family typewriter
...

\family default
 för att möjliggöra att 
\begin_inset Quotes eld
\end_inset

skicka vidare
\begin_inset Quotes erd
\end_inset

 argumentet 
\family typewriter
na.rm
\family default
 till funktionerna inne i 
\family typewriter
minianalys()
\family default
.
 Pröva sedan vektorerna ovan men med argumentet 
\family typewriter
na.rm = TRUE
\family default
 i 
\family typewriter
minianalys()
\family default
.
\end_layout

\begin_layout Section

\family typewriter
*apply
\family default
 funktioner
\end_layout

\begin_layout Enumerate
Vi ska nu använda så kallade de så kallade 
\family typewriter
*apply
\family default
-funktionerna i R.
 Dessa funktioner används istället för loopar.
 De är ofta betydligt mycket snabbare att beräkna än loopar.
 
\end_layout

\begin_layout Enumerate
Vi börjar med funktionen 
\family typewriter
tapply()
\family default
.
 
\family typewriter
tapply()
\family default
 används för att använda en funktion per grupp (över en så kallad 
\begin_inset Quotes eld
\end_inset

Ragged array
\begin_inset Quotes erd
\end_inset

 eller vektorer av olika längd).
 Detta är ofta av intresse i praktiken.
 Vi börjar med att läsa in datsetet 
\family typewriter
ChickWeight
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

data(ChickWeight)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vi ska nu pröva 
\family typewriter
tapply()
\family default
 som har argumenten 
\family typewriter
X
\family default
, 
\family typewriter
INDEX
\family default
, 
\family typewriter
FUN
\family default
 och 
\family typewriter
simplify
\family default
.
 
\family typewriter
X
\family default
 anger variabeln (eller datasetet) vi vill använda funktionen på, 
\family typewriter
INDEX
\family default
 anger vilken gruppvariabel som ska användas och FUN anger vilken funktion
 som ska användas per grupp.
 Ett exempel på hur vi kan beräkna den genomsnittliga vikten per kyckling
 ser ut på följande sätt:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

tapply(X=ChickWeight$weight, INDEX=ChickWeight$Chick, FUN=mean)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Pröva att på ett liknande sätt beräkna standardavvikelsen för varje kyckling
 samt antalet observationer (längden av vektorn) och kvantilerna med 
\family typewriter
quantile()
\family default
.
\end_layout

\begin_layout Enumerate
Pröva nu att skicka argument till quantile för att räkna ut percentiler
 för varje kyckling.
 
\end_layout

\begin_layout Enumerate

\family typewriter
*apply
\family default
-funktioner är särskilt smidiga att använda tillsammans med anonyma funktioner.
 Pröva koden nedan.
 Vad gör den?
\begin_inset CommandInset label
LatexCommand label
name "enu:*apply-funktioner-är-särskilt"

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

tapply(X=ChickWeight$weight, INDEX=ChickWeight$Chick, FUN=function(x) x)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Pröva att på liknande sätt skapa en funktion som räknar ut skillnaden mellan
 det första värdet och det sista värdet för varje kyckling med en anonym
 funktion.
\end_layout

\begin_layout Enumerate
Pröva nu att göra om uppgiften ovan, men i 
\family typewriter
tapply()
\family default
 ange 
\family typewriter
simplify = TRUE
\family default
.
 Vad är skillnaden?
\end_layout

\begin_layout Enumerate
Vi ska nu studera 
\family typewriter
lapply()
\family default
.
 
\family typewriter
lapply()
\family default
 använder en funktion 
\family typewriter
FUN
\family default
 på varje element i en lista 
\family typewriter
X
\family default
.
 Kör koden nedan: Vad har du skapat för lista?
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

myList <- split(x = ChickWeight, f = ChickWeight$Diet)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Räkna ut medelvärde, varians och percentiler för varje weight i varje element
 i 
\family typewriter
myList
\family default
 med 
\family typewriter
lapply()
\family default
.
\end_layout

\begin_layout Enumerate
Skapa nu en funktion som kan ta ett dataset för en kyckling och räknar ut
 skillnaden i vikt mellan tidpunkt 0 och tidpunkt 10, om värden saknas för
 tidpunkt 0 eller 10 ska 
\family typewriter
NA
\family default
 returneras.
 Använd denna funktion tillsammans med 
\family typewriter
lapply()
\family default
 för att beräkna den skillnaden mellan tidpunkt 0 och 10 för alla kycklingar.
\end_layout

\begin_layout Section
Minitillämpning: Fakultetsfunktion
\end_layout

\begin_layout Standard
Fakultet är definierat på följande sätt:
\begin_inset Formula 
\[
n!=\prod_{i=1}^{n}k
\]

\end_inset


\end_layout

\begin_layout Enumerate
Skriv en funktion 
\family typewriter
MyFactorial()
\family default
 med en for-loop som beräknar fakulteten för godtyckligt 
\begin_inset Formula $n$
\end_inset

.
\end_layout

\begin_layout Enumerate
Pröva din funktion med följande nummer 
\begin_inset Formula $n=1,10,100.$
\end_inset

 
\end_layout

\begin_layout Enumerate
Skriv en liknande funktion 
\family typewriter
MyFactorial2()
\family default
 som istället använder en while-loop och pröva din funktion med följande
 nummer 
\begin_inset Formula $n=1,10,100$
\end_inset

.
 Dubbelkolla att du får samma resultat som i uppgift 1) ovan.
\end_layout

\begin_layout Enumerate
Skriv en tredje funktion 
\family typewriter
MyFactorial3()
\family default
 utan men med 
\family typewriter
prod()
\family default
.
\end_layout

\begin_layout Enumerate
Kör din funktion 
\family typewriter
MyFactorial(150)
\family default
 5000 gånger och undersök hur lång tid hela körningen tar med 
\family typewriter
system.time()
\family default
.
 
\end_layout

\begin_layout Enumerate
Upprepa uppgift ovan med 
\family typewriter
MyFactorial2()
\family default
 och 
\family typewriter
MyFactorial3()
\family default
.
 
\end_layout

\begin_layout Enumerate
Vilket av de tre sätten att beräkna fakulteten är snabbast (effektivast)?
 Varför tror du?
\end_layout

\begin_layout Enumerate
Vad händer om du prövar 
\family typewriter
MyFactorial(500)
\family default
? 
\end_layout

\begin_layout Enumerate
Notera att 
\begin_inset Formula 
\[
\log(n!)=\sum_{i=1}^{n}\log(i)
\]

\end_inset

Ändra din funktion 
\family typewriter
MyFactorial()
\family default
 och lägg till ett extra argument 
\family typewriter
log
\family default
 så att när 
\family typewriter
log = TRUE
\family default
 returneras logaritmen av fakulteten och när 
\family typewriter
log = FALSE
\family default
 returneras den vanliga fakulteten.
 Sätt värdet 
\family typewriter
TRUE
\family default
 som defaultvärde.
\end_layout

\begin_layout Enumerate
Vad händer om du kör 
\family typewriter
MyFactorial(500)
\family default
? Om du kör 
\family typewriter
MyFactorial(500, log = FALSE)
\family default
?
\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Inlämningsuppgifter
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "Inluppg.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

# Sourca in facit.
\end_layout

\begin_layout Plain Layout

source("/Users/manma97/Dropbox/Doktorandstudier/Undervisning/Statistisk
 programmering i R/RCourse2014/KursRprgmTeacher/Labs/Solutions/LabSolutions.R")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Svenska personnummer
\end_layout

\begin_layout Standard
I Sverige har samtliga medborgare personnummer som de behåller livet ut
 och som används för identifikation.
 Personnummret består av tre delar, födelsedatum, födelsenummer och en kontrolls
iffra.
 Som standard anges personnummer på följande sätt 
\family typewriter
ÅÅÅÅMMDDNNNK
\family default
 där 
\family typewriter
ÅÅÅÅ
\family default
 är födelseåret, 
\family typewriter
MM
\family default
 födelsemånaden, 
\family typewriter
DD
\family default
 födelsedagen, 
\family typewriter
NNN
\family default
 födelsenumret och 
\family typewriter
K
\family default
 kontrollsiffran.
\end_layout

\begin_layout Standard
Kontrollsiffran beräknas baserat på de övriga siffrorna i personnummret
 vilket gör att det är möjligt att kontrollera om ett personnummer är korrekt
 eller inte.
 Det är också möjligt att utifrån ett personnummer beräkna ålder och kön
 (samt för vissa även födelseort, men det spelar ingen roll i denna uppgift).
 
\end_layout

\begin_layout Standard
Detaljerna om för hur kön och kontrollsiffran beräknas finns i Skatteverkets
 broschyr SKV 704 
\begin_inset CommandInset href
LatexCommand href
name "[PDF]"
target "http://www.skatteverket.se/download/18.1e6d5f87115319ffba380001857/1285595720207/70408.pdf"

\end_inset

.
 Läs igenom denna broschyr innan du gör uppgiften nedan.
\end_layout

\begin_layout Standard
Exempel på personnummer som kan användas för att testa dina funktioner finns
 dels i broschyren från Skatteverket och dels på Wikipedia (sökord: “Personnumme
r i Sverige”).
 Du kan självklart även testa med ditt eget personnummer om du vill.
\end_layout

\begin_layout Standard
Syftet med denna uppgifter att skapa flera mindre funktioner och sedan kombinera
 ihop dessa funktioner till en större mer komplex funktion.
\end_layout

\begin_layout Standard
Det vi vill ha i slutändan är en funktion som tar en vektor med personnummer
 på olika format.
 Funktionen ska sedan returnera ett dataset med den information som finns
 i personnummret (med undantag för födelselän).
 Vi tar det dock i flera steg, med flera olika funktioner som utför olika
 steg.
 De stegen vi kommer göra är: 
\end_layout

\begin_layout Enumerate
Skapa en funktion för att konvertera personnummer till ett standardformat
 som vi kan arbeta med vidare.
\end_layout

\begin_layout Enumerate
Skapa en funktion för att kontrollera kontrollsiffran i ett personnummer.
\end_layout

\begin_layout Enumerate
Skapa en funktion för att kontrollera om personnummret är ett samordningsnummer.
\end_layout

\begin_layout Enumerate
Skapa en funktion för att ta fram uppgift om kön från ett personnummer.
\end_layout

\begin_layout Enumerate
Kontrollera/skapa ett datum att beräkna ålder från.
\end_layout

\begin_layout Enumerate
Skapa en funktion för att ta fram uppgifter om ålder från ett personnummer
 och ett givet datum.
\end_layout

\begin_layout Enumerate
Skapa en funktion som sätter samman funktionerna ovan till en funktion,
 som tar en vektor av personnummer som input och returnerar ett dataset
 med personnummer och övrig information.
\end_layout

\begin_layout Standard
Följande funktioner kommer vara mycket användbara i denna uppgift: 
\family typewriter
paste()
\family default
, 
\family typewriter
substr()
\family default
 och 
\family typewriter
Sys.Date()
\family default
.
 Kolla upp dessa funktioner innan du sätter igång.
\end_layout

\begin_layout Subsection
Uppgift 1: 
\family typewriter
pnrFormat()
\end_layout

\begin_layout Standard
Personnummer förekommer i många olika format i vanliga dataanalyser.
 De format funktionen ska kunna hantera är 
\family typewriter
ÅÅMMDD-NNNK
\family default
, 
\family typewriter
ÅÅMMDDNNNK
\family default
 och 
\family typewriter
ÅÅÅÅMMDDNNNK
\family default
.
 Vi hoppar över personnummer på formen 
\family typewriter
ÅÅMMDD+NNNK
\family default
.
 Detta innebär att vi antar att alla personnummer är yngre än 100 år gamla.
 I R kan dessutom personnummer förekomma både som numeriska variabler faktorvari
abler och som textvariabler.
 Vår funktion ska klara samtliga dessa fall.
\end_layout

\begin_layout Standard
Funktionen ska kunna ta ett personnummer på ett godtyckligt format och returnera
 personnummret som ett textelement med följande format: 
\family typewriter
ÅÅÅÅMMDDNNNK
\end_layout

\begin_layout Standard
Ett förslag på de steg som kan ingå är:
\end_layout

\begin_layout Enumerate
Konvertera numeriska och faktorvariabler till text.
\end_layout

\begin_layout Enumerate
Använd en villkorssats för att hantera de tre olika formaten ovan [
\series bold
Tips!
\series default
 
\family typewriter
nchar()
\family default
]
\end_layout

\begin_layout Standard
Här är textexempel på hur funktionen ska fungera:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

pnr <- "640823-3234" 
\end_layout

\begin_layout Plain Layout

pnrFormat(pnr) 
\end_layout

\begin_layout Plain Layout

pnr <- 1311310324
\end_layout

\begin_layout Plain Layout

pnrFormat(pnr) 
\end_layout

\begin_layout Plain Layout

pnr <- "198112189876" 
\end_layout

\begin_layout Plain Layout

pnrFormat(pnr) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Uppgift 2: 
\family typewriter
pnrCtrl()
\end_layout

\begin_layout Standard
Nästa steg i funktionen är att kontrollera om ett personnummer är korrekt
 eller inte.
 För att beräkna en kontrollsiffra används den så kallade Luhn-algoritmen,
 mer information finns 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "http://sv.wikipedia.org/wiki/Luhn-algoritmen"

\end_inset


\series default
\color inherit
.
 Vi ska skapa en funktion som använder Luhn-algoritmen för att testa om
 ett personnummer är korrekt eller inte.
 Fördelen nu är att vi vet exakt på vilket format personnummren kommer att
 vara eftersom vi kommer använda funktionen 
\family typewriter
pnrFormat()
\family default
 innan vi anropar 
\family typewriter
pnrCtrl()
\family default
.
 
\end_layout

\begin_layout Standard
Funktionen ska ta argumentet 
\family typewriter
pnr
\family default
 och returnera 
\family typewriter
TRUE
\family default
 eller 
\family typewriter
FALSE
\family default
 beroende på om personnummret är korrekt eller inte.
\end_layout

\begin_layout Standard
Ett förslag på hur funktionen kan implementeras är följande:
\end_layout

\begin_layout Enumerate
Dela upp personnummret så respektive siffra blir ett eget element.
 [
\series bold
Tips!
\series default
 
\family typewriter
strsplit()
\family default
 och 
\family typewriter
unlist()
\family default
]
\end_layout

\begin_layout Enumerate
Konvertera de uppdelade siffrorna till ett numeriskt format.
\end_layout

\begin_layout Enumerate
Den vektor av de enskilda siffrorna i personnummret kan nu användas i Luhn
 - algoritmen.
 Det enklaste sättet är att multiplicera personnummrets vektor med en beräknings
vektor av 0:or 1:or och 2:or på det sätt som beräkningen specificeras av
 Luhn-algoritmen.
 
\begin_inset Newline newline
\end_inset


\series bold
Obs!
\series default
 Skatteverkets beräkning görs inte på hela personnummret som returnerades
 av 
\family typewriter
pnrFormat()
\family default
, de delar som inte ska räknas kan sättas till 0 i beräkningsvektorn.
\end_layout

\begin_layout Enumerate
Nästa steg är att summera alla värden i vektorn ovan.
 Tänk på att tal större än 9 ska räknas som summan av tiotalssiffran och
 entalssiffran.
 [
\series bold
Tips!
\series default
 
\family typewriter
%%
\family default
 och 
\family typewriter
%/%
\family default
]
\end_layout

\begin_layout Enumerate
Summera värdena på vektorn som beräknades i 4 ovan.
 Plocka ut entalssiffran och dra denna entalssiffra från 10.
 Du har nu räknat ut kontrollsiffran.
 Puh!
\end_layout

\begin_layout Enumerate
Testa om den uträknade kontrollsiffran är samma som kontrollsiffran i personnumm
ret.
\end_layout

\begin_layout Standard
Här är ett testexempel på hur funktionen ska fungera:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

pnr <- "196408233234" 
\end_layout

\begin_layout Plain Layout

pnrCtrl(pnr)
\end_layout

\begin_layout Plain Layout

pnr <- "190101010101" 
\end_layout

\begin_layout Plain Layout

pnrCtrl(pnr)
\end_layout

\begin_layout Plain Layout

pnr <- "198112189876" 
\end_layout

\begin_layout Plain Layout

pnrCtrl(pnr)
\end_layout

\begin_layout Plain Layout

pnr <- "190303030303" 
\end_layout

\begin_layout Plain Layout

pnrCtrl(pnr)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Uppgift 3: 
\family typewriter
pnrSex()
\end_layout

\begin_layout Standard
I denna uppgift ska vi från ett personnummer räkna ut det juridiska könet.
 Som framgår i skattebroschyren ska detta räknas ut genom att undersöka
 om den näst sista siffran i personnummret är jämt (kvinna) eller udda (man).
 Detta är vad som definierar en persons juridiska kön.
 
\end_layout

\begin_layout Standard
Skapa nu en funktion du kallar 
\family typewriter
pnrSex()
\family default
.
 Denna funktion ska ta ett personnummer och returnera en persons kön som
 ett textelement, 
\family typewriter
M
\family default
 för man och 
\family typewriter
K
\family default
 för kvinna.
\end_layout

\begin_layout Standard
Ett förslag på hur funktionen kan implementeras är följande:
\end_layout

\begin_layout Enumerate
Plocka ut den näst sista siffran i personnumret.
\end_layout

\begin_layout Enumerate
Konvertera denna siffra till numeriskt format och testa om siffran är jämn
 (returnera 
\family typewriter
K
\family default
) eller udda (returnera 
\family typewriter
M
\family default
)
\end_layout

\begin_layout Standard
Här är testexempel på hur funktionen ska fungera:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

pnr <- "196408233234" 
\end_layout

\begin_layout Plain Layout

pnrSex(pnr)
\end_layout

\begin_layout Plain Layout

pnr <- "190202020202" 
\end_layout

\begin_layout Plain Layout

pnrSex(pnr)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Uppgift 4: 
\family typewriter
pnrSamordn()
\end_layout

\begin_layout Standard
Vissa personer som inte är svenska medborgare kan få ett svenskt samordningsnumm
er som fungerar på samma sätt som personnummer.
 Då får man ett så kallad samordningsnummer.
 Den enda skillnaden är att att talet 60 har lagts till personnummrets födelseda
tum (d.v.s.
 
\family typewriter
DD
\family default
 i 
\family typewriter
ÅÅÅÅMMDD
\family default
).
 
\end_layout

\begin_layout Standard
Skapa en funktion du kallar 
\family typewriter
pnrSamordn()
\family default
 som tar ett personnummer på formatet genererat av funktionen 
\family typewriter
pnrFormat()
\family default
 och returnerar 
\family typewriter
TRUE
\family default
 om det är ett samordningsnummer och 
\family typewriter
FALSE
\family default
 annars.
\end_layout

\begin_layout Standard
Ett förslag på hur funktionen kan implementeras är följande:
\end_layout

\begin_layout Enumerate
Plocka ut födelsedatumet ur personnummret.
\end_layout

\begin_layout Enumerate
Konvertera datumet till ett numeriskt värde och pröva om detta värde är
 större än 60.
\end_layout

\begin_layout Standard
Här är testexempel på hur funktionen ska fungera:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

pnr <- "196408233234" 
\end_layout

\begin_layout Plain Layout

pnrSamordn(pnr)
\end_layout

\begin_layout Plain Layout

pnr <- "198112789876" 
\end_layout

\begin_layout Plain Layout

pnrSamordn(pnr)
\end_layout

\begin_layout Plain Layout

pnr <- "198112189876" 
\end_layout

\begin_layout Plain Layout

pnrSamordn(pnr)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Uppgift 5: 
\family typewriter
pnrDate()
\end_layout

\begin_layout Standard
Vi ska i denna funktion skapa ett datum för att senare beräkna åldern för
 olika individer.
 Skapa en funktion du kallar 
\family typewriter
pnrDate()
\family default
 som tar argumentet 
\family typewriter
date
\family default
.
 Argumentet date ska ha följande textformat: 
\family typewriter
ÅÅÅÅ-MM-DD
\family default
.
 Om datumet inte är på detta format ska funktionen stoppas och returnera
 följande felmeddelande:
\end_layout

\begin_layout Quote

\family typewriter
Incorrect date format: Correct format should be YYYY-MM-DD.
\end_layout

\begin_layout Standard
Om inget datum anges av användaren ska den 31 december under föregående
 år returneras som datum.
 
\end_layout

\begin_layout Standard
Observera att senare i kursen kommer vi lära oss paketet 
\family typewriter
lubridate
\family default
 som är betydligt bättre och enklare för att hantera och kontrollera datum
 och tid.
 
\end_layout

\begin_layout Standard
Ett förslag på hur funktionen kan implementeras är följande:
\end_layout

\begin_layout Enumerate
Ange ett defaultvärde för argumentet date som inte är aktuellt, ex.
 
\family typewriter
NA
\family default
.
\end_layout

\begin_layout Enumerate
Om date har defaultvärdet, sätt datumvärdet den 31 december föregående år.
 [
\series bold
Tips!
\series default
 
\family typewriter
is.na()
\family default
, 
\family typewriter
Sys.Date()
\family default
 och 
\family typewriter
paste()
\family default
] 
\end_layout

\begin_layout Enumerate
Testa om datumformatet är korrekt.
 Gör följande kontroller [
\series bold
Tips!
\series default
 
\family typewriter
all()
\family default
]:
\end_layout

\begin_deeper
\begin_layout Enumerate
Är 
\family typewriter
ÅÅÅÅ
\family default
, 
\family typewriter
MM
\family default
 och 
\family typewriter
DD
\family default
 siffror.
 Detta kan kontrolleras genom att konvertera till numeriskt värde.
 Är det då inte siffror blir värdet 
\family typewriter
NA
\family default
.
 [
\series bold
Tips!
\series default
 
\family typewriter
is.na()
\family default
]
\end_layout

\begin_layout Enumerate
Är 
\family typewriter
MM
\family default
 större än 0 och mindre än 13.
\end_layout

\begin_layout Enumerate
Är 
\family typewriter
DD
\family default
 större än 0 och mindre än 32.
 
\end_layout

\end_deeper
\begin_layout Enumerate
Om datumformatet är är inkorrekt stoppa funktionen och returnera felmeddelandet
 ovan.
\end_layout

\begin_layout Enumerate
Annars, returnera datumet på korrekt format.
\end_layout

\begin_layout Standard
Här är testexempel på hur funktionen ska fungera:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

pnrDate("2010-10-10")
\end_layout

\begin_layout Plain Layout

pnrDate()
\end_layout

\begin_layout Plain Layout

pnrDate("Hejbaberiba")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Uppgift 6: 
\family typewriter
pnrAge()
\end_layout

\begin_layout Standard
Sist ska vi baserat på dels ett personnummer och dels ett datum beräkna
 åldern för personen vid detta datum.
 Skapa en funktion du kallar 
\family typewriter
pnrAge()
\family default
 tar argumentet 
\family typewriter
pnr
\family default
 och argumentet 
\family typewriter
date
\family default
.
 Argumentet date ska ha följande textformat: 
\family typewriter
ÅÅÅÅ-MM-DD
\family default
.
 Du kan utgå från att formatet är på detta sätt då 
\family typewriter
pnrDate()
\family default
 kommer anropas innan denna funktion.
\end_layout

\begin_layout Standard
Ett förslag på hur funktionen kan implementeras är följande:
\end_layout

\begin_layout Enumerate
Räkna ut skillnaden i hela år mellan datumets årtal personnummrets årtal.
 D.v.s hur gammal personen är den 31 december.
\end_layout

\begin_layout Enumerate
Pröva om månad och dag är större (senare) för 
\family typewriter
pnr
\family default
 än för 
\family typewriter
date
\family default
.
 Om så är fallet dra av ett år från årtalsberäkningen ovan (personen har
 ännu inte fyllt år) och returnera åldern vid det givna datumet.
\end_layout

\begin_layout Standard
Här är testexempel på hur funktionen ska fungera:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

pnr <- "196408233234" 
\end_layout

\begin_layout Plain Layout

pnrAge(pnr, date = "2010-10-10")
\end_layout

\begin_layout Plain Layout

pnr <- "198112189876" 
\end_layout

\begin_layout Plain Layout

pnrAge(pnr, date = "2014-12-31")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Uppgift 7: 
\family typewriter
pnrInfo()
\end_layout

\begin_layout Standard
Nu har vi skapat ett antal funktioner för att beräkna olika delar av personnummr
et.
 Nu ska vi sätta ihop dessa funktioner till en enda funktion som baserat
 på en vektor av personnummer returnerar en 
\family typewriter
data.frame
\family default
 följande variabler:
\end_layout

\begin_layout Enumerate

\family typewriter
pnr
\family default
: personnummret i textformat, 
\end_layout

\begin_layout Enumerate

\family typewriter
correct
\family default
: information om personnummret är korrekt,
\end_layout

\begin_layout Enumerate

\family typewriter
samordn
\family default
: om personnummret är ett samordningsnummer 
\end_layout

\begin_layout Enumerate

\family typewriter
sex
\family default
: kön och 
\end_layout

\begin_layout Enumerate

\family typewriter
age
\family default
: ålder i år 
\end_layout

\begin_layout Standard
Det ska också vara möjligt att skicka vidare datum till funktionen 
\family typewriter
pnrDate()
\family default
, men om inget skickas med ska defaultvärdet i 
\family typewriter
pnrDate()
\family default
 användas.
 
\end_layout

\begin_layout Standard
Funktionen ska dessutom generera följande meddelande med 
\family typewriter
message()
\family default
:
\end_layout

\begin_layout Quote

\family typewriter
The age has been calculated at [DATUM].
\end_layout

\begin_layout Standard
Ett förslag på hur funktionen kan implementeras är följande:
\end_layout

\begin_layout Enumerate
Kontrollera/skapa ett korrekt datum för att beräkna ålder med 
\family typewriter
pnrDate()
\family default
.
\end_layout

\begin_layout Enumerate
Formatera om alla personnummer i inputvektorn till standardformatet med
 
\family typewriter
pnrFormat()
\family default
.
\end_layout

\begin_layout Enumerate
Räkna ut vilka personnummer som är korrekta personnummer med 
\family typewriter
pnrCtrl()
\family default
.
\end_layout

\begin_layout Enumerate
Använd 
\family typewriter
pnrSamordn()
\family default
 för att skapa en vektor över vilka personnummer som är samordningsnummer.
\end_layout

\begin_layout Enumerate
Använd 
\family typewriter
pnrSex()
\family default
 för att räkna ut könet för respektive personnummer.
\end_layout

\begin_layout Enumerate
Dra av 6 från första siffran i födelsedatumet för de personnummer som är
 samordningsnummer.
 Du kan antingen göra detta direkt i 
\family typewriter
pnrInfo()
\family default
 eller skapa en till egen funktion som gör just detta.
\end_layout

\begin_layout Enumerate
Använd 
\family typewriter
pnrAge()
\family default
 för att beräkna åldern för respektive personnummer.
\end_layout

\begin_layout Enumerate
Skriv ut meddelandet ovan med 
\family typewriter
message()
\family default
.
\end_layout

\begin_layout Enumerate
Sätt samman dessa resultat till den 
\family typewriter
data.frame
\family default
 som ska returneras.
\end_layout

\begin_layout Standard
Här är testexempel på hur funktionen ska fungera:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

pnr <- c("196408233234", "640883-3234","198112189876")
\end_layout

\begin_layout Plain Layout

pnrInfo(pnr) 
\end_layout

\begin_layout Plain Layout

pnrInfo(pnr, date = "2000-06-01") 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tävlingsuppgift (ej obligatorisk): Optimera 
\family typewriter
pnrInfo()
\end_layout

\begin_layout Standard
För de studenter som vill och är intresserade kan pröva att optimera funktionen
 
\family typewriter
pnrInfo()
\family default
 för så snabb beräkningshastighet som möjligt.
 Generellt sett ska optimering av kod endast göras efter att den koden fungerar
 som den ska.
 Eller som en av datorvetenskapens giganter, 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "Donald Knuth"
target "http://en.wikipedia.org/wiki/Donald_Knuth"

\end_inset


\series default
\color inherit
, har uttryckt det: 
\end_layout

\begin_layout Quote
Premature optimization is the root of all evil.
\end_layout

\begin_layout Standard
Om du vill delta i tävlingen skapar du en ny R - fil med ditt slutliga förslag
 
\family typewriter
pnrInfoSnabbast()
\family default
.
 Kontrollera att den fungerar med testexemplet.
 Vinnaren är den med den snabbaste 
\series bold
fungerande
\series default
 funktionen.
\end_layout

\begin_layout Standard

\series bold
Obs!
\series default
 Du måste lämna in den vanliga labben också.
\end_layout

\begin_layout Standard
Generellt i R kan man tänka på följande om man vill optimera beräkningshastighet
en för en funktion:
\end_layout

\begin_layout Enumerate

\family typewriter
for
\family default
 loopar är långsammare än 
\family typewriter
*apply
\family default
-funktioner.
\end_layout

\begin_layout Enumerate
det går snabbare om man först skapar en datastruktur och sedan fyller den
 med värden än att skapa en ny datastruktur i varje iteration.
\end_layout

\begin_layout Standard
Det finns säkert en massa andra sätt! Pröva och testa hur du effektivisera
 koden med
\family typewriter
 system.time()
\family default
.
 Här är ett exempel på hur ni kan pröva hur snabba era funktioner är:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

testSpeed <- sample(c("196408233234", "640883-3234","198112189876"), size=10000,
 replace=TRUE) 
\end_layout

\begin_layout Plain Layout

system.time(pnrInfo(testSpeed))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard

\shape italic
Nu är du klar! 
\end_layout

\end_body
\end_document
