#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass report
\begin_preamble
\usepackage{fancyhdr}%The first page setting
\fancypagestyle{plain}
{%
  \fancyhf{} % clear all header and footer fields
  \fancyhead[L]{
    LINK\"OPING UNIVERSITY\\
    Avdelningen för Statistik\\
    Institutionen för datavetenskap
  }
  \fancyhead[R]{Programming i R}
}
%The remaining pages

\fancyhead[RO,LE]{}
\fancyhead[C]{Programming i R}
\fancyhead[LO,RE]{}

 
\end_preamble
\use_default_options true
\begin_modules
knitr
\end_modules
\maintain_unincluded_children false
\language swedish
\language_package auto
\inputencoding auto
\fontencoding default
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 0
\use_package esint 1
\use_package mathdots 0
\use_package mathtools 0
\use_package mhchem 0
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2.5cm
\topmargin 2.5cm
\rightmargin 2.5cm
\bottommargin 2.5cm
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\quotes_language swedish
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Datorlaboration 6
\end_layout

\begin_layout Author
Måns Magnusson
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<prompt=TRUE,eval=TRUE,echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

# Global options
\end_layout

\begin_layout Plain Layout

opts_chunk$set(comment='') 
\end_layout

\begin_layout Plain Layout

options(digits = 5)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "IntroDel2.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Datorlaboration
\end_layout

\begin_layout Chapter
Introduktion till grafik
\end_layout

\begin_layout Standard
I R finns en hel del funktionalitet för att arbeta med grafik.
 I det grundläggande R finns det som brukar kallas base graphs som är den
 grundläggande grafikfunktionaliteten.
 Utöver detta är paketet 
\family typewriter
ggplot2
\family default
 mycket populär för visualisering.
 För en introduktion till grafisk visualisering av data är 
\begin_inset CommandInset citation
LatexCommand cite
key "tufte1983visual"

\end_inset

 ett standardverk.
\end_layout

\begin_layout Standard
I base-paketet fungerar grafiken på så sätt att vi lägger till lager för
 lager i en visualisering av data.
 Tänk dig att du ritar med en penna.
 Vi kommer i denna del använda oss av en del av de dataset som installeras
 tillsammans med R.
 Läs in dessa dataset på följande sätt.
 Undrar du vad materialen innehåller kan du använda 
\family typewriter
?iris
\family default
, 
\family typewriter
?mtcars
\family default
, 
\family typewriter
?Nile
\family default
 för att få information om de olika variablerna.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

data(iris) 
\end_layout

\begin_layout Plain Layout

data(mtcars)
\end_layout

\begin_layout Plain Layout

data(Nile)
\end_layout

\begin_layout Plain Layout

Nile <- as.data.frame(Nile) 
\end_layout

\begin_layout Plain Layout

Nile$years <- 1871:1970
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Det finns många möjliga inställningar som går att göra.
 Dessa sammanfattas i dokumentationen för 
\family typewriter
par
\family default
.
 Sök efter 
\family typewriter
?par
\family default
 i hjälpen för att få detaljerad information.
\end_layout

\begin_layout Section
Visualisera en variabel
\end_layout

\begin_layout Standard
Vi inleder med att försöka visualisera data i en variabel.
\end_layout

\begin_layout Subsection
Cirkeldiagram
\end_layout

\begin_layout Standard
Cirkeldiagram är ofta populärt, men bör generellt sett undvikas (se ex.
 
\begin_inset CommandInset citation
LatexCommand cite
key "tufte1983visual"

\end_inset

).
 Det är en typ av diagram som inte lämpas sig bra för människors tänkande
 och många har svårt att jämföra tårtbitar visuellt, 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "http://www.stevefenton.co.uk/Content/Pie-Charts-Are-Bad/"

\end_inset


\series default
\color inherit
 finns de vanligaste argumenten.
 För att skapa cirkeldiagram använder vi funktionen 
\family typewriter
pie()
\family default
 på följande sätt.
 
\end_layout

\begin_layout Enumerate
Som ett första steg måste vi beräkna frekvenser för den kategoriska variabel
 vi vill visualisera med 
\family typewriter
table()
\family default
:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

freqs <- table(iris$Species) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Baserat på denna frekvensfördelning är det därefter möjligt att skapa ett
 cirkeldiagram med 
\family typewriter
pie()
\family default
:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

pie(freqs)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi ändra på labels gör vi det genom att ange en ny textvektor som labels,
 en rubrik anger vi med 
\family typewriter
main
\family default
:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

pie(freqs, labels=c("Del 1", "Del 2", "Del 3")) 
\end_layout

\begin_layout Plain Layout

pie(freqs, labels=c("Hej", "Hejsan", "Hej hej"),     main="Cirkeldiagram")
 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
På ett liknande sätt kan vi sedan ange vilka färger vi vill ange med argumentet
 
\family typewriter
col
\family default
.
 Samtliga färger som går att använda i R finns 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf"

\end_inset


\series default
\color inherit
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

pie(freqs, col=c("rosybrown1","yellowgreen", "khaki2"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vi kan självklart styra ännu mer i utformningen av cirkeldiagrammen.
 För mer hjälp för cirkeldiagram använd 
\family typewriter
?pie
\family default
.
 Men som sagt undvik cirkeldiagram i största möjliga mån.
\end_layout

\begin_layout Subsection
Barcharts
\end_layout

\begin_layout Standard
Barcharts är enklare att tolka på ett korrekt sätt och är en av de mest
 grundläggande graftyperna.
\end_layout

\begin_layout Enumerate
För att skapa en barchart behöver vi (på samma sätt som för cirkeldiagrammen)
 utgå från frekvenser när vi skapar vårt diagram.
 Vi börjar med det allra enklaste diagrammet:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

freqCars <- table(mtcars$gear) 
\end_layout

\begin_layout Plain Layout

barplot(freqCars)  
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Som framgår ovan får vi ett mycket enkelt diagram.
 Diagrammet använder sig av radnamn (
\family typewriter
rownames()
\family default
) för 
\family typewriter
freqCars
\family default
.
 Pröva att kolla hur 
\family typewriter
freqCars
\family default
 se ur och dess radnamn.
\end_layout

\begin_layout Enumerate
Att lägga till rubriker och titel gör vi på samma sätt som för cirkeldiagramen
 ovan, med argumenten 
\family typewriter
main
\family default
, 
\family typewriter
xlab
\family default
 och 
\family typewriter
ylab
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

barplot(freqCars, main="Cars", xlab="Gears", ylab="Counts")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vi kan också välja att ha horisontella staplar med argumentet 
\family typewriter
horiz=TRUE
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

barplot(freqCars, main="Cars", horiz=TRUE) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Som för cirkeldiagrammet kan vi också byta färg om vi vill med 
\family typewriter
col
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

barplot(freqCars, main="Cars", col="red") 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vi kan också ha flera variabler i samma stapeldiagram, så kallade grupperade
 eller 
\begin_inset Quotes eld
\end_inset

stackade
\begin_inset Quotes erd
\end_inset

 stapeldiagram.
 Vi börjar med grupperade stapeldiagram.
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

carTable <- table(mtcars$vs, mtcars$gear) 
\end_layout

\begin_layout Plain Layout

barplot(carTable, main="Car Distribution by Gears and VS",         xlab="Number
 of Gears", col=c("darkblue","red"),         legend = rownames(carTable))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
På ett liknande sätt kan vi skapa 
\begin_inset Quotes eld
\end_inset

stackade
\begin_inset Quotes erd
\end_inset

 stapeldiagram:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

barplot(counts, main="Car Distribution by Gears and VS",         xlab="Number
 of Gears", col=c("darkblue","red"), beside=TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Histogram
\end_layout

\begin_layout Standard
Histogram kan vi använda för att visualisera en kontinuerlig variabel.
 
\end_layout

\begin_layout Enumerate
För att skapa ett enkelt histogram använder vi funktionen 
\family typewriter
hist()
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

hist(iris$Sepal.Length) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Att ändra rubriker och färger görs på samma sätt som i övriga diagram.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

hist(iris$Sepal.Length, col="blue", main="Min titel", xlab="X-titel", ylab="Y-tit
el") 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
När det gäller histogram kan det vara så att i vissa fall vill vi ha fler
 eller färre staplar.
 Detta styrs med breaks.
 Pröva följande sätt att skapa ett histogram:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

hist(iris$Sepal.Length, breaks=40, col="red")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Histogram är diskreta, men vi kan enkelt i R skapa en uppskattning av den
 underliggande fördelningen visuellt.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

dens <- density(iris$Sepal.Length)
\end_layout

\begin_layout Plain Layout

plot(dens)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Visualisering i flera variabler
\end_layout

\begin_layout Subsection
Sambandsdiagram
\end_layout

\begin_layout Standard
En av de vanligaste sätten att visualisera tvådimensionella data är med
 scatter plots.
 Vi ska nu pröva att visualiser den historiska utvecklingen av Nilens vattennivå
er.
\end_layout

\begin_layout Enumerate
Att skapa en vanlig scatterplots görs med funktionen 
\family typewriter
plot()
\family default
.
 Det är en generisk funktion och i många fall använder vi plot för att visualise
ra olika typer av objekt.
 Grundutförandet ger dock en scatterplot på följande sätt:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, fig.height=3, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

plot(Nile$years, Nile$x) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Som tidigare kan vi också lägga till/förändra rubriker enkelt om vi vill.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

plot(Nile$years, Nile$x, main="Water in the Nile", xlab="Years", ylab="Level")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi ändra färgen på våra punkter använder vi som vanligt parametern
 
\family typewriter
col
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

plot(Nile$years, Nile$x, col="blue") 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi att olika punkter ska ha olika färger anger vi bara en vektor med
 färgnamn.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

colVector<- rep("blue",length(Nile$x)) 
\end_layout

\begin_layout Plain Layout

colVector[Nile$years>1900] <- "red" 
\end_layout

\begin_layout Plain Layout

plot(Nile$years, Nile$x, col=colVector)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Studera hur 
\family typewriter
colVector
\family default
 ser ut ovan så du förstår hur vektorn används för att styra färgen på punkterna.
 Pröva att använd ytterligare än färg till punkterna efter 1945.
\end_layout

\begin_layout Enumerate
Vi kan också ändra hur punkterna ser ut och använda andra symboler.
 Det finns totalt 25 olika symboler i baspaketet.
 För att använda en punkttyp används argumentet pch.
 Med koden nedan kan vi snabbt se alla olika typer av punkter som finns
 i baspaketet.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

plot(1:25, 1:25, type="p", pch = 1:25)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Linjediagram
\end_layout

\begin_layout Enumerate
Nilens vattennivåer är en tidsserie snarare än ett vanligt samband.
 För tidsserier vill vi ofta ha linjegrafer istället för enskilda punkter.
 För att ändra till en linjegraf anger vi bara 
\family typewriter
type=
\begin_inset Quotes erd
\end_inset

l
\begin_inset Quotes erd
\end_inset


\family default
.
 
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, fig.height=3, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

plot(Nile$years, Nile$x, type="l") 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Precis som när det gäller punkter kan vi använda olika linjetyper med argumentet
 
\family typewriter
lty
\family default
.
 Prova linjetyp 2 t.o.m.
 10.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

plot(Nile$years, Nile$x, type="o", lty=2) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi både ha linjer och punkter kan vi använda 
\family typewriter
type=
\begin_inset Quotes erd
\end_inset

o
\begin_inset Quotes erd
\end_inset


\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

plot(Nile$years, Nile$x, type="o", lty=2, pch=3) 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
En sista typ av linjegraf är en trappstegsgraf: 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

plot(Nile$years, Nile$x, type="s") 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Pröva att lägg till argumentet 
\family typewriter
lwd=3
\family default
 i plotten ovan.
 Vad innebär detta? 
\end_layout

\begin_layout Subsection
Boxplot
\end_layout

\begin_layout Standard
Vill vi jämföra olika fördelningar efter en kategorisk variabel gör vi det
 med fördel med en boxplot
\end_layout

\begin_layout Enumerate
Nedan finns kod för att producera en boxplot.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, fig.height=4, fig.width=4, fig.align='center'>>=
\end_layout

\begin_layout Plain Layout

boxplot(Sepal.Length~Species, data=iris)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Precis som i tidigare diagram är det enkelt att lägga till färger.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

boxplot(Sepal.Length~Species, data=iris, col=c("blue", "green", "red"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Eller att lägga till rubriker.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

boxplot(Sepal.Length~Species, data=iris, main="Blommor!")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Grafiska inställningar och tillägg
\end_layout

\begin_layout Standard
Ovan har vi sett en hel del av de figurer som går att producera.
 Ned kommer lite mer inställningar och tillägg vi kan göra när vi arbetar
 med grafik i R.
\end_layout

\begin_layout Enumerate
För att kontrollera vilka värden som ska vara med på x- och y-axeln i en
 plot används argumenten 
\family typewriter
xlim=
\family default
 och 
\family typewriter
ylim=
\family default
.
 Kör koden nedan.
 Ändra värdena på 
\family typewriter
xlim=
\family default
 och 
\family typewriter
ylim=
\family default
 och se vad som händer med plotten.
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

plot(Nile$years, Nile$x, type="s") 
\end_layout

\begin_layout Plain Layout

plot(Nile$years, Nile$x, type="s", xlim=c(1900,1945), ylim=c(600, 1200))
 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi lägga på punkter i grafen använder vi 
\family typewriter
points()
\family default
.
 Pröva att lägga till punkterna i plotten:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

points(Nile$years, Nile$x, pch=20)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vi kan också lägga till godtyckliga linjer (ex.
 som referenser) med 
\family typewriter
abline()
\family default
.
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

abline(v=1920, lty=4)
\end_layout

\begin_layout Plain Layout

abline(h=900, lty=10)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vad händer om du ändrar värdet i 
\begin_inset Quotes eld
\end_inset


\family typewriter
v=
\family default

\begin_inset Quotes erd
\end_inset

 och 
\begin_inset Quotes eld
\end_inset


\family typewriter
h=
\family default

\begin_inset Quotes erd
\end_inset

 till numeriska vektorer?
\end_layout

\begin_layout Enumerate

\family typewriter
abline()
\family default
 kan också användas för att rita ut räta linjer med räta linjens ekvation
 (om vi ex.
 anpassat en regressionsmodell):
\begin_inset Formula 
\[
f(x)=a+bx
\]

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

abline(a=6130,b=-2.7)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi ha flera grafer i en använder vi 
\family typewriter
par(mfrow=c(3,2))
\family default
.
 Det kan vara krångligt att förstå exakt vad detta betyder.
 Men det vi säger till R med detta kommando är att vi vill ha tre rader
 och två kolumner med figurer.
 Pröva att köra denna kod och skapa därefter 6 figurer (vilka som hellst).
 Ändra till en 2
\begin_inset Formula $\times$
\end_inset

2 figur och skapa på samma sätt fyra figurer.
\end_layout

\begin_layout Section
Spara figurer
\end_layout

\begin_layout Standard
I många fall vill spara specifika grafer i olika format.
 I R finns ett antal olika format som kan användas.
 De vanligaste är TIFF, BNP, JPEG, PNG och PDF.
 I alla fall används den aktuella funktionen för formatet 
\family typewriter
tiff()
\family default
 för TIFF, 
\family typewriter
pdf()
\family default
 för PDF o.s.v.
\end_layout

\begin_layout Enumerate
De olika grafikfunktionerna använder olika argument, men gemensamt är att
 vi först anger vilket format vi vill använda, sedan skapar vi vår figur
 och därefter stänger vi av 
\begin_inset Quotes eld
\end_inset

utskriften
\begin_inset Quotes erd
\end_inset

 till denna fil.
 Kör koden nedan för ett exempel:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

jpeg(filename = "minJPEG.jpeg", width = 480, height = 480)
\end_layout

\begin_layout Plain Layout

plot(Nile$years, Nile$x, type="l") 
\end_layout

\begin_layout Plain Layout

dev.off()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Figurer som skrivs ut på detta sätt hamnar i 
\begin_inset Quotes eld
\end_inset

working directory
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
För pdf:er finns det ett snabbare sätt att snabbt skriva ut en figur som
 pdf:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

plot(Nile$years, Nile$x, type="l") 
\end_layout

\begin_layout Plain Layout

dev.copy2pdf(file="MinNilenPlot.pdf")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Pröva nu att själv skriva ut en av dina figurer ovan i PNG- och TIFF-format.
\end_layout

\begin_layout Section
* Extraproblem: Skapa en egen graf
\end_layout

\begin_layout Enumerate
Ladda in datasetet geyser med 
\family typewriter
data(faithful)
\family default
.
\end_layout

\begin_layout Enumerate
Testa att göra två histogram, dels över 
\family typewriter
waiting
\family default
 och 
\family typewriter
eruptions
\family default
.
 
\end_layout

\begin_deeper
\begin_layout Enumerate
Ändra antalet 
\family typewriter
breaks
\family default
 i histogrammen.
 Hur ser det ut om du har väldigt många eller vädigt få?
\end_layout

\begin_layout Enumerate
Pröva att ändra färg med 
\family typewriter
col=
\begin_inset Quotes erd
\end_inset

blue
\begin_inset Quotes erd
\end_inset


\family default
.
 
\end_layout

\begin_layout Enumerate
Ändra nu rubriken och axeltexterna med 
\family typewriter
xlab=
\family default
 och 
\family typewriter
ylab=
\family default
.
 
\end_layout

\begin_layout Enumerate
Spara ned de två histogrammen i en figur (förslagsvis över och under varandra)
 som en pdf.
\end_layout

\end_deeper
\begin_layout Enumerate
Gör en scatterplot av 
\family typewriter
waiting
\family default
 mot 
\family typewriter
eruptions
\family default
.
 Huvudrubrik ska vara 
\begin_inset Quotes eld
\end_inset

Old faithful
\begin_inset Quotes erd
\end_inset

.
\end_layout

\begin_layout Enumerate
Det verkar finnas två tydliga kluster.
\end_layout

\begin_deeper
\begin_layout Enumerate
Ge de olika klustren olika färger.
\end_layout

\begin_layout Enumerate
Ge de olika klustren olika punktsymboler.
\end_layout

\end_deeper
\begin_layout Enumerate
Lägg till en bildtext (eng: legend) till figuren (kolla på 
\family typewriter
?legend
\family default
) enligt nedan.
 Testa att lägga 
\begin_inset Quotes eld
\end_inset

legend
\begin_inset Quotes erd
\end_inset

 på någon annan plats i plotten.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

legend("topleft", pch = c(1, 2), col = c("red", "blue"), legend = c("clu1",
 "clu2"))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Spara ned även denna graf i pdf-format.
\end_layout

\begin_layout Chapter
Introduktion till R markdown och knitr
\end_layout

\begin_layout Standard
R markdown och knitr är ett system för att skapa dynamiska rapporter med
 R, vilket innebär att vi väver ihop R-kod, data och text i ett och samma
 dokument.
 Med knitr och markdown kan vi skapa reproducerbara analyser med full spårbarhet
 hur beräkning, databearbetningar och grafik skapats.
 Vår slutprodukt kan bli rapporter i Word, PDF eller HTML.
\end_layout

\begin_layout Standard
R markdown består av två delar.
 Dels 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "markup-språket"
target "http://en.wikipedia.org/wiki/Markup_language"

\end_inset


\series default
\color inherit
 markdown som används för att skapa text, ekvationer, bilder m.m.
 och dels knitr för att integrera dokumentet med R-kod.
 knitr kommer från ordet knit (sticka) och är en ordlek med innebörden att
 vi stickar ihop R med, i detta fall, markdown.
 knitr kan dock användas med andra ordbehandlare som LaTeX och LyX.
\end_layout

\begin_layout Standard
Det som händer när vi 
\series bold
rendrerar
\series default
 en Rmd fil är att knitr går igenom dokumentet, kör all R-kod och stoppar
 tillbaka svaret från R i markdownformat.
 När detta är gjort skapas ett word-, HTML- eller pdf-dokument från markdownfile
n.
\end_layout

\begin_layout Standard
Det finns ett bra referensdokument 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "http://rmarkdown.rstudio.com/RMarkdownReferenceGuide.pdf"

\end_inset


\series default
\color inherit
 och en bra 
\begin_inset Quotes eld
\end_inset

fusklapp
\begin_inset Quotes erd
\end_inset

 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "http://rmarkdown.rstudio.com/RMarkdownCheatSheet.pdf"

\end_inset


\series default
\color inherit
.
\end_layout

\begin_layout Standard
Under senare tid har reproducerbarhet när det gäller statistiska analyser
 kommit att bli allt mer centralt.
 Reproducerbarhet innebär att ett experiment eller forskningsresultat ska
 kunna återupprepas - reproduceras - av andra forskare.
 Idag innebär ofta reproducerbarheten att det finns krav på att hela analyser,
 med både text, data och kod ska kunna reproduceras av andra forskare.
 Mer information om reproducerbar forskning finns 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "http://reproducibleresearch.net/"

\end_inset


\series default
\color inherit
.
\end_layout

\begin_layout Section
Grunderna i markdown
\end_layout

\begin_layout Enumerate
För att skapa ett Rmd-dokument i R-Studio väljer vi New file 
\begin_inset Formula $\rightarrow$
\end_inset

 R markdown.
 Ange titel på dokumentet och HTML.
 Vi ska nu ha fått upp ett exempeldokument.
\end_layout

\begin_layout Enumerate
Vi borde fått upp ett dokument som borde se ut på följande sätt (första
 delen).
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

--- 
\end_layout

\begin_layout Plain Layout

title: "My document" 
\end_layout

\begin_layout Plain Layout

author: "My name" 
\end_layout

\begin_layout Plain Layout

date: "1 januari 2015" 
\end_layout

\begin_layout Plain Layout

output: html_document 
\end_layout

\begin_layout Plain Layout

---
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

This is an R Markdown document.
 Markdown is a simple formatting
\end_layout

\begin_layout Plain Layout

syntax for authoring HTML, PDF, and MS Word documents.
 
\end_layout

\begin_layout Plain Layout

For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Pröva att 
\begin_inset Quotes eld
\end_inset

knitta
\begin_inset Quotes erd
\end_inset

 dokumentet med knappen 
\begin_inset Quotes eld
\end_inset

knit HTML
\begin_inset Quotes erd
\end_inset

 i R-Studio.
 Pröva att 
\begin_inset Quotes eld
\end_inset

knitta
\begin_inset Quotes erd
\end_inset

 till både PDF, HTML och word-dokument.
\end_layout

\begin_layout Enumerate
I R-Studio finns hjälp om R-markdown med knappen 
\begin_inset Quotes eld
\end_inset

?
\begin_inset Quotes erd
\end_inset

.
 Pröva att få fram hjälp på detta sätt.
\end_layout

\begin_layout Subsection
Grundläggande markdown
\end_layout

\begin_layout Standard
Lägg till det som framgår i kodblocken i ditt dokument och 
\begin_inset Quotes eld
\end_inset

knitta
\begin_inset Quotes erd
\end_inset

 ett HTML-dokument.
\end_layout

\begin_layout Enumerate
Rubriker skapas med 
\family typewriter
#
\family default
.
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

# Rubrik 1
\end_layout

\begin_layout Plain Layout

## Rubrik 2
\end_layout

\begin_layout Plain Layout

### Rubrik 3
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi ha fet stil använder vi 
\family typewriter
**
\family default
 och vill vi ha kursiv stil använder vi 
\family typewriter
*
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

I like both **bold** text and *italic* text.
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi lägga till en länk använder vi hakparantes som anger länkens namn
 och därefter vanliga paranteser .
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

[Comics](http://xkcd.com/1239/) for the win!
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Att lägga till en bild görs på ett liknande sätt som en länk, dock med 
\family typewriter
!
\family default
 innan hakparantesen.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

![My pic](http://imgs.xkcd.com/comics/social_media.png)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi lägga till listor använder vi 
\family typewriter
*
\family default
 eller numrerar vår lista.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

* lista (onumrerad)
\end_layout

\begin_layout Plain Layout

* knitr
\end_layout

\begin_layout Plain Layout

 + R
\end_layout

\begin_layout Plain Layout

 + text
\end_layout

\begin_layout Plain Layout

 + bilder
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

1.
 lista (numrerad)
\end_layout

\begin_layout Plain Layout

2.
 Rmd
\end_layout

\begin_layout Plain Layout

 + knitr
\end_layout

\begin_layout Plain Layout

 + md
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Det går också enkelt att skapa tabeller.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

Kolumnrubrik 1 | Kolumnrubrik 2
\end_layout

\begin_layout Plain Layout

-------------- | --------------
\end_layout

\begin_layout Plain Layout

Cell 1         | Cell 2 
\end_layout

\begin_layout Plain Layout

Cell 3         | Cell 4 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Mer exempel på formatering finns i referensbladet för R markdown 
\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "http://rmarkdown.rstudio.com/RMarkdownReferenceGuide.pdf"

\end_inset

.
\end_layout

\begin_layout Subsection
Ekvationer
\end_layout

\begin_layout Standard
Ofta vill vi beskriva våra beräkningar med matematiska ekvationer.
 I markdown finns det möjlighet att skriva ekvationer med LaTeX ekvationsystem.
 För exempel på hur det går att skriva LaTeX-ekvationer, se följande 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[minihandbok]"
target "http://en.wikibooks.org/wiki/LaTeX/Mathematics"

\end_inset


\series default
\color inherit
.
\end_layout

\begin_layout Standard
För att skapa ekvationer använder vi 
\family typewriter
$
\family default
 och 
\family typewriter
$$
\family default
.
\end_layout

\begin_layout Enumerate
Vi börjar med att skapa följande ekvation i markdown.
\begin_inset Formula 
\[
a+b=10
\]

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

$$a+b=10$$
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vi kan skapa 
\begin_inset Quotes eld
\end_inset

inline
\begin_inset Quotes erd
\end_inset

-ekvationer med 
\family typewriter
$
\family default
.
 Denna ekvation: 
\begin_inset Formula $E=mc^{2}$
\end_inset

, skrivs i markdown som:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

Denna ekvation: $E=mc^2$
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vi kan skapa vilka ekvationer vi vill med LaTeX ekvationssystem.
 Fundera på koden nedan hur denna ekvation har byggts upp i LaTeX.
\begin_inset Formula 
\[
\frac{\int_{0}^{\infty}x_{a}^{2}dx}{10}
\]

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

$$
\backslash
frac{
\backslash
int^{
\backslash
infty}_{0}x^{2}_{a}dx}{10}$$
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Integrera R-kod med knitr
\end_layout

\begin_layout Standard
Vi har nu gått igenom grunderna för att skapa ett markdowndokument.
 Den stora fördelen med markdown framgår dock först när vi kan integrera
 våra dokument med R-kod, grafik och tabeller.
\end_layout

\begin_layout Standard
Pröva att kopiera in koden nedan i ditt R-markdowndokument och 
\begin_inset Quotes eld
\end_inset

knitta
\begin_inset Quotes erd
\end_inset

 dokumenten till HTML eller pdf.
 
\end_layout

\begin_layout Subsection
Inline-kod
\end_layout

\begin_layout Enumerate
Ibland kan vi vilja göra mindre, enklare beräkningar, direkt i ett dokument.
 För detta använder vi inlinekod.
 För att lägga till en enkel beräkning direkt i dokumentet används 
\family typewriter
`r [R-kod här]`
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

I know that 1 + 1 = `r 1 + 1`.
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
R-block - 
\begin_inset Quotes eld
\end_inset

chunks
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Standard
Med inline-kod kommer vi en liten bit mot ett dynamiskt dokument.
 Men vill vi ha mer komplicerade beräkningar, grafik eller tabeller måste
 vi skapa dessa i R-block, eller 
\begin_inset Quotes eld
\end_inset

chunks
\begin_inset Quotes erd
\end_inset

.
 Dessa styrs med så knitr-alternativ.
 Samtliga knitr-alternativ för kodblock finns listade 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "http://rmarkdown.rstudio.com/RMarkdownReferenceGuide.pdf"

\end_inset


\series default
\color inherit
.
\end_layout

\begin_layout Enumerate
För att skapa ett R-block används följande kod.
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

```{r} 
\end_layout

\begin_layout Plain Layout

a <- 1 + 1
\end_layout

\begin_layout Plain Layout

a
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Om koden ovan körs kommer både R-koden att synas och resultatet.
 Vill vi inte vis R-koden anger vi bara 
\family typewriter
echo=FALSE
\family default
 som knitr-alternativ.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

```{r, echo=FALSE} 
\end_layout

\begin_layout Plain Layout

a <- 1 + 1
\end_layout

\begin_layout Plain Layout

a
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vill vi istället dölja resultatet anger vi 
\family typewriter
results='hide'
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

```{r, results='hide'} 
\end_layout

\begin_layout Plain Layout

a <- 1 + 1
\end_layout

\begin_layout Plain Layout

a
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vi kan också låta bli att köra koden med 
\family typewriter
eval=FALSE
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

```{r, eval=FALSE} 
\end_layout

\begin_layout Plain Layout

a <- 1 + 1
\end_layout

\begin_layout Plain Layout

a
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Det går självklart också att kombinera alternativ.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

```{r, eval=FALSE, echo=FALSE} 
\end_layout

\begin_layout Plain Layout

a <- 1 + 1
\end_layout

\begin_layout Plain Layout

a
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Grafik
\end_layout

\begin_layout Standard
En av de stora fördelarna med knitr och Rmd är att vi i R kan skapa grafik
 som direkt skapas och sätts in i dokumentet.
\end_layout

\begin_layout Enumerate
För att lägga in ett diagram skapar vi diagrammet som vanligt i R.
 Under motorhuven skapas en grafikfil som sätts in i dokumentet automatiskt.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

```{r, echo=FALSE} 
\end_layout

\begin_layout Plain Layout

data(faithful) 
\end_layout

\begin_layout Plain Layout

hist(faithful$waiting)
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Även här finns flera knitralternativt för att styra hur grafiken ska placeras
 i dokumentet.
 
\family typewriter
fig.height
\family default
 och 
\family typewriter
fig.width
\family default
 styr storleken och 
\family typewriter
fig.align
\family default
 styr om diagrammet ska vara höger-, vänster- eller centrerat till mitten.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

```{r, echo=FALSE,fig.width=3, fig.height=3, fig.align='center'} 
\end_layout

\begin_layout Plain Layout

data(faithful) 
\end_layout

\begin_layout Plain Layout

hist(faithful$waiting)
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Tabeller
\end_layout

\begin_layout Standard
Utöver grafik och text är tabeller vanligt i statistiska analyser och rapporter.
 Med funktionen 
\family typewriter
kable()
\family default
 i knitr-paketet kan vi skapa tabeller direkt från R-objekt.
 
\end_layout

\begin_layout Enumerate
För att skapa tabeller direkt behöver vi dels använda funktionen 
\family typewriter
kable()
\family default
, men vi behöver också ange att funktionen direkt skapar en markdowntabell
 som ska ses som markdownkod.
 Därför behöver vi ange att resultatet ska vara 
\family typewriter
'asis'
\family default
.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

```{r, echo=FALSE, results='asis'} 
\end_layout

\begin_layout Plain Layout

knitr::kable(head(faithful))
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vi kan, precis som med grafiken, styra tabellernas grundutseende en del.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

```{r, echo=FALSE, results='asis'} 
\end_layout

\begin_layout Plain Layout

knitr::kable(head(faithful), digits = 2, align = c("l", "c"))
\end_layout

\begin_layout Plain Layout

```
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Det finns mer avancerade funktioner för att skapa tabeller automatiskt från
 ex.
 linjära regressionsmodeller med paketen 
\family typewriter
xtable
\family default
 och 
\family typewriter
tables
\family default
.
\end_layout

\begin_layout Chapter
Input och output (I/O): Data på webben
\end_layout

\begin_layout Standard
Allt mer data lagras på webben med olika former av molntjänster.
 Anledningen till att data lagras på webben kan vara flera:
\end_layout

\begin_layout Itemize
Reproducerbarhet/öppna data för andra forskare
\end_layout

\begin_layout Itemize
Samarbete kring datainsamling
\end_layout

\begin_layout Itemize
Stabilitet
\end_layout

\begin_layout Itemize
Versionshantera förändringar i data
\end_layout

\begin_layout Standard
Nedan finns exempel från vanliga molntjänster och hur man kan ladda ned
 data från dessa direkt till R.
 Ett av paketen för att hantera denna typ av datainläsning är 
\family typewriter
repmis
\family default
, som kan läsa in de flesta csv, xlsx och Rdata-filer.
\end_layout

\begin_layout Section

\family typewriter
downloader
\end_layout

\begin_layout Standard
Ibland kan det vara så att vi vill ladda ned filer från R, men inte läsa
 in dem.
 Vi kanske vill ladda ned ett antal filer och sedan läsa in dem en och en.
 För att ladda ned filer i R finns funktionen 
\family typewriter
download.file()
\family default
.
 Dock kan det ibland vara lite klurigt att få den att fungera för så kallade
 secure http (https) adresser.
 Av bekvämlighet har därför paketet 
\family typewriter
downloader
\family default
 skapats som gör nedladdning av filer mycket enkelt och bekvämt oberoende
 av operativsystem.
 
\end_layout

\begin_layout Enumerate
För att ladda ned data anger vi dels sökvägen till den aktuella filen och
 sedan sökvägen dit filen ska laddas ned.
 I detta fallet laddas filen ned till min working directory.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<>>=
\end_layout

\begin_layout Plain Layout

library(downloader) 
\end_layout

\begin_layout Plain Layout

apple_remote <- "https://github.com/MansMeg/KursRprgm/blob/master/Labs/DataFiles/
Apple.RData" 
\end_layout

\begin_layout Plain Layout

apple_local <- paste0(getwd(), "/Apple.RData") 
\end_layout

\begin_layout Plain Layout

download(url = apple_remote, destfile = apple_local)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Github
\end_layout

\begin_layout Standard
github.com är framförallt en tjänst för att versionshantera programkod i
 molnet.
 Dock används det också mycket för att lagra enklare datamaterial.
 Särskilt material som förändras mycket där vi behöver kunna följa vilka
 förändringar som gjorts.
\end_layout

\begin_layout Standard
Kör nedanstående exempel för att läsa in filen polls från github.
 Filen innehåller (nästan) samtliga opinionsmätningar i Sverige sedan 1998.
 Mer information finns 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "https://github.com/MansMeg/SwedishPolls"

\end_inset


\series default
\color inherit
.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

library(repmis) 
\end_layout

\begin_layout Plain Layout

data_url <- "https://github.com/MansMeg/SwedishPolls/raw/master/Data/Polls.csv"
 
\end_layout

\begin_layout Plain Layout

polls <- repmis::source_data(data_url, sep = ",", dec = ".", header = TRUE)
\end_layout

\begin_layout Plain Layout

head(polls[,1:12])
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Google docs
\end_layout

\begin_layout Standard
Google docs eller google drive är en molntjänst för kalkylblad i molnet.
 Vi ska nu pröva att läsa in ett publicerat kalkylblad.
 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "Här"
target "https://docs.google.com/spreadsheets/d/16uE3bb_7rHt_g4zOBXAVHM40N3YqRIXLPQwsE1yenAQ/pubhtml"

\end_inset


\series default
\color inherit
 finns dokumentet vi ska läsa in (det är samma data som faithful-datasetet
 i R).
 I sökvägen kan vi se textsträngen 
\family typewriter
16uE3bb_7rHt_g4zOBXAVHM40N3YqRIXLPQwsE1yenAQ
\family default
.
 Detta är det unika id:t för detta google-kalkylblad.
\end_layout

\begin_layout Standard
Vi kommer använda paketet RGoogleDoc som klarar att göra mycket med google
 docs (som att spara dataset, läsa textfiler m.m.).
 Vi kommer dock endast använda det för att läsa in data i R.
\end_layout

\begin_layout Standard
För att läsa in vårt material gör vi det i tre steg.
\end_layout

\begin_layout Enumerate
Först läser vi in paketet och skapar vi en koppling till det unika google
 doc id:t.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

library(RGoogleDocs) 
\end_layout

\begin_layout Plain Layout

google_ws_object <- publicWorksheet("16uE3bb_7rHt_g4zOBXAVHM40N3YqRIXLPQwsE1yenA
Q")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
I nästa steg laddar vi ned information om det aktuella kalkylbladet (hur
 många blad m.m.).
 Under con anger vi en koppling till google doc.
 Är ett dokument öppet kan vi ange NULL.
 Annars behöver vi ange vårt google acount om vi exempelvis vill komma åt
 dokument som inte är publika (ex.
 våra egna data från ett google forms).
 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

google_worksheets <- getWorksheets(google_ws_object, con = NULL)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Det sista steget är att läsa in dokumentet i R.
 Det kan vi göra genom att ange vilket blad vi vill läsa in.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

my_faithful <- sheetAsMatrix(google_worksheets[[1]], con = NULL, header
 = TRUE)
\end_layout

\begin_layout Plain Layout

head(my_faithful)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Dropbox
\end_layout

\begin_layout Standard
Vi kan också vilja läsa in data från dropbox på ett enkelt sätt.
 För att kunna komma åt data på dropbox behöver vi först dela den fil vi
 vill läsa in i R.
 Mer information om hur man delar filer med dropbox finns 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "https://www.dropbox.com/help/167"

\end_inset


\series default
\color inherit
.
\end_layout

\begin_layout Standard
När vi delar en fil på dropbox för vi en länk.
 Nedan är ett exempel på en länk:
\end_layout

\begin_layout Standard

\series bold
\color blue
\begin_inset CommandInset href
LatexCommand href
name "https://www.dropbox.com/s/pbxmllhmoax5zn6/google.csv?dl=0"
target "https://www.dropbox.com/s/pbxmllhmoax5zn6/google.csv?dl=0"

\end_inset


\end_layout

\begin_layout Standard
För att läsa in denna fil i R använder vi repmispaketet.
 Vill vi ha full kontroll på dropbox (skapa och läsa dolda filer m.m.) direkt
 från R finns paketet 
\family typewriter
rDrop
\family default
.
\end_layout

\begin_layout Standard
Länken från dropbox består av två delar, ett öppet dokumentid (
\family typewriter
pbxmllhmoax5zn6
\family default
 i exemplet ovan) och ett filnamn (
\family typewriter
google.csv
\family default
).
 Med dessa två kan vi enkelt läsa in en fil i R på följande sätt:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE>>=
\end_layout

\begin_layout Plain Layout

library(repmis) 
\end_layout

\begin_layout Plain Layout

my_google <- 
\end_layout

\begin_layout Plain Layout

  repmis::source_DropboxData(file = "google.csv", 
\end_layout

\begin_layout Plain Layout

                             key = "pbxmllhmoax5zn6", 
\end_layout

\begin_layout Plain Layout

                             sep=";", dec = ",")
\end_layout

\begin_layout Plain Layout

head(my_google)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Chapter

\family typewriter
pxweb
\end_layout

\begin_layout Standard
Statistiska centralbyrån har utvecklat ett API för att ladda ned data direkt
 utan att först gå via deras webbplats.
 En koppling till deras API finns installerat som paketet 
\family typewriter
pxweb
\family default
 i R.
 Detta paket fungerar för samtliga pxweb-apier.
 Men det största api:et är utan tvekan SCB:s.
\end_layout

\begin_layout Enumerate
Börja med att installera paketet 
\family typewriter
pxweb
\family default
 och läs in det i R.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

install.packages("pxweb")
\end_layout

\begin_layout Plain Layout

library(pxweb)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Det går att få en snabb introduktion till detta paket med funktionen 
\family typewriter
vignette()
\family default
.
 Dock är denna labb mer utförlig än vignetten.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

vignette(topic="pxweb")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Navigera i SCB:s API
\end_layout

\begin_layout Standard
Ofta vet vi inte exakt vad för data vi vill ha utan vill navigera igenom
 SCB:s databaser på ett effektivt sätt.
 Detta gör vi med funktionen 
\family typewriter
interactive_pxweb()
\family default
.
 Vill vi leta upp ett givet datamaterial som vi vill spara måste vi tillskriva
 datamaterialet till ett objekt.
\end_layout

\begin_layout Standard
Statistiska centralbyråns API består av två delar:
\end_layout

\begin_layout Itemize
Navigera mellan de olika datamaterialen.
\end_layout

\begin_layout Itemize
Välja ut delar av datamaterialet vi vill ladda ned.
\end_layout

\begin_layout Enumerate
För att navigera i Statistiska centralbyråns API kan vi använda funktionen
 
\family typewriter
interactive_pxweb()
\family default
 som listar förinstallerade api:er och ger möjlighet att välja vilket api
 vi vill hämta data från.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

mitt_data <- interactive_pxweb()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
För att anknyta direkt till Statistiska centralbyråns api kan då följande
 kod användas:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE>>=
\end_layout

\begin_layout Plain Layout

mitt_data <- interactive_pxweb(api = 'api.scb.se', version = 'v1', lang =
 'sv') 
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Vi ska nu leta upp andelen arbetslösa från den senaste arbetskraftsundersökninge
n och spara ned detta som ett datamaterial i R.
 Vi befinner oss nu i den översta menyn.
 Ange 
\family typewriter
1
\family default
 för att gå vidare till menyn för statistik om arbetsmarknad: 
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE, echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

cat(" ...
 
\backslash
n")
\end_layout

\begin_layout Plain Layout

cat("21.
 [UF] Utbildning och forskning
\backslash
n")
\end_layout

\begin_layout Plain Layout

cat("Enter the data (number) you want to explore: ('esc' = Quit, 'b' = Back)
\backslash
n")
\end_layout

\begin_layout Plain Layout

cat("1: 1")
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Pröva att 
\begin_inset Quotes eld
\end_inset

gå tillbaka
\begin_inset Quotes erd
\end_inset

 till huvudmenyn med 
\family typewriter
b
\family default
.
\end_layout

\begin_layout Enumerate
Navigera dig fram till följande datamaterial som vi ska läsa in:
\begin_inset Newline newline
\end_inset


\family typewriter
[NAKUArblosaTK] Arbetslösa 15-74 år (AKU) efter arbetslöshetstidens längd,
 kön och ålder.
 Kvartal 2006K2 - 2014K2
\end_layout

\begin_layout Enumerate
Vi ska nu ladda ned detta datamaterial till vår R-session.
 R frågan nu om du vill ladda ned datamaterialet (eller om vi bara vill
 ha kod för att ladda ned materialet längre fram).
 Ange 
\family typewriter
y
\family default
 (yes).
\end_layout

\begin_layout Enumerate
Nästa steg efterfrågas om du vill ha materialet i orginalformat eller som
 en färdigformaterad data.frame i R.
 Ange 
\family typewriter
y
\family default
 (yes).
\end_layout

\begin_layout Enumerate
Som ett sista steg efterfrågas nu om du vill ha koden för att ladda ned
 denna data direkt i R.
 Ange 
\family typewriter
y
\family default
 (yes).
\end_layout

\begin_layout Enumerate
Nu är vi inne i den del av API:et som anger vilka delar av materialet du
 vill ladda ned.
 Varje variabel kommer nu dyka upp och vi får ange vilka data vi vill ha.
\begin_inset Newline newline
\end_inset

Vill vi bara ha en kategori anger vi den siffran, vill vi ha allt material
 anger vi 
\family typewriter
*
\family default
 och vill vi ha delar anger vi det antingen som en sekvens med 
\family typewriter
:
\family default
 eller avgränsat med 
\family typewriter
,
\family default
.
\end_layout

\begin_deeper
\begin_layout Enumerate
För variabel 
\family typewriter
ARBETSLÖSHETSTID
\family default
 ange 
\series bold
allt
\series default
 (med 
\family typewriter
*
\family default
) som den del av materialet du vill ha.
\end_layout

\begin_layout Enumerate
För variabel 
\family typewriter
KÖN
\family default
 ange 
\family typewriter
totalt
\family default
 som den del du vill ha
\end_layout

\begin_layout Enumerate
För variabel 
\family typewriter
ÅLDER
\family default
 ange grupperna 
\family typewriter
15-24
\family default
, 
\family typewriter
25-54
\family default
 och 
\family typewriter
55-74
\family default
 som den del du vill ha.
\end_layout

\begin_layout Enumerate
För variabel 
\family typewriter
TABELLINNEHÅLL
\family default
 ang
\family typewriter
 Arbetslösa, 1000-tal
\family default
 som den variabel du vill ha.
\end_layout

\begin_layout Enumerate
Variabeln 
\family typewriter
KVARTAL
\family default
 innehåller många kategorier.
 Om det är fler än 10 kategorier så döljs de mittersta kategorierna.
 För att se alla kategorierer, ange 
\family typewriter
a
\family default
.
\end_layout

\begin_layout Enumerate
Välj nu ut tidsperioden 2010K1 till senaste kvartalet hos SCB.
\end_layout

\end_deeper
\begin_layout Enumerate
Nu ska materialet laddas ned.
 Du borde också få ut följande kod:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE, echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

myDataSetName <-    
\end_layout

\begin_layout Plain Layout

get_pxweb_data(
\end_layout

\begin_layout Plain Layout

url = "http://api.scb.se/OV0104/v1/doris/sv/ssd/AM/AM0401/AM0401L/NAKUArblosaTK",
              
\end_layout

\begin_layout Plain Layout

dims = list(Arbetsloshetstid = c('*'),
\end_layout

\begin_layout Plain Layout

Kon = c('1+2'),
\end_layout

\begin_layout Plain Layout

Alder = c('15-24', '25-54', '55-64'),
\end_layout

\begin_layout Plain Layout

ContentsCode = c('AM0401F0'),
\end_layout

\begin_layout Plain Layout

Tid = c('2010K1', '2010K2', '2010K3', '2010K4', '2011K1', '2011K2', '2011K3',
 '2011K4', '2012K1', '2012K2', '2012K3', '2012K4', '2013K1', '2013K2', '2013K3',
 '2013K4', '2014K1', '2014K2')),
\end_layout

\begin_layout Plain Layout

clean = TRUE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Titta på det material du laddat ned.
\end_layout

\begin_layout Section
Ladda ned data från SCB direkt med kod 
\end_layout

\begin_layout Standard
Ofta vill vi ladda ned/komma åt data från SCB som en löpande del i en analysproc
ess där vi använder de senaste data från SCB.
 Då vill vi använda pxweb, inte interaktivt, utan som R-kod.
 
\end_layout

\begin_layout Enumerate
Spara ned koden du fick ovan och kör den för att ladda ned datamaterialet
 direkt.
 (Nu sparas den som 
\family typewriter
myDataSetName
\family default
).
\end_layout

\begin_layout Enumerate
Pröva att ändra argumentet clean till 
\family typewriter
FALSE
\family default
.
 Studera hur materialet ser ut.
 Detta är den 
\begin_inset Quotes eld
\end_inset

råa
\begin_inset Quotes erd
\end_inset

 data som laddas ned från SCB.
\end_layout

\begin_layout Enumerate
Vi vill nu ladda ned data för alla tidpunkter.
 Ändra variabeln tid till 
\family typewriter
'*'
\family default
 och ladda ned datat på nytt.
\end_layout

\begin_layout Section
* Extraproblem: Andra api:er
\end_layout

\begin_layout Standard
Vi har nu prövat Statistiska centralbyråns API, men allt fler offentliga
 myndigheter (och företag) lägger ut sina resultat i form av ett pxweb-api.
 Med api_catalogue() är det möjligt att se vilka andra api:er som nu finns
 inkluderade.
\end_layout

\begin_layout Enumerate
Pröva att navigera i något annat API än Statistiska centralbyråns och ladda
 ned data därifrån.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
ifx
\backslash
undefined
\backslash
MAINBIB
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "References"
options "plain"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fi
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Inlämningsuppgifter
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand input
filename "Inluppg.lyx"

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE,echo=FALSE>>=
\end_layout

\begin_layout Plain Layout

# Set you (local) path
\end_layout

\begin_layout Plain Layout

solution_path <- "/Users/manma97/Dropbox/Doktorandstudier/Undervisning/Statistis
k programmering i R/KursRprgmTeacher/Labs/exercise_solutions/"
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

solution_files <- dir(solution_path)
\end_layout

\begin_layout Plain Layout

for(sol_file in solution_files) source(file = paste0(solution_path, sol_file),
 echo = FALSE)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Chapter
Inlämningsuppgifter
\end_layout

\begin_layout Standard
För att använda 
\family typewriter
markmyassignment
\family default
 i denna laboration ange:
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

library(markmyassignment)
\end_layout

\begin_layout Plain Layout

lab_path <-
\end_layout

\begin_layout Plain Layout

"https://raw.githubusercontent.com/MansMeg/KursRprgm/master/Labs/Tests/d6.yml"
\end_layout

\begin_layout Plain Layout

set_assignment(lab_path)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section

\family typewriter
fast_swe_pop()
\end_layout

\begin_layout Standard
Du ska nu skapa en funktion, utan argument, som kopplar upp sig mot SCB:s
 api med 
\family typewriter
pxweb
\family default
, laddar ned befolkningsstatistik och summerar upp befolkningen i Sverige
 för varje år.
 
\end_layout

\begin_layout Standard

\series bold
Tips!
\series default
 
\family typewriter
aggregate()
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

library(pxweb)
\end_layout

\begin_layout Plain Layout

pop <- fast_swe_pop()
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

head(pop)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   year population 
\end_layout

\begin_layout Plain Layout

 1 1968    7931193 
\end_layout

\begin_layout Plain Layout

 2 1969    8004270 
\end_layout

\begin_layout Plain Layout

 3 1970    8081142 
\end_layout

\begin_layout Plain Layout

 4 1971    8115165 
\end_layout

\begin_layout Plain Layout

 5 1972    8129129 
\end_layout

\begin_layout Plain Layout

 6 1973    8144428
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

tail(pop)
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

    year population 
\end_layout

\begin_layout Plain Layout

 41 2008    9256347 
\end_layout

\begin_layout Plain Layout

 42 2009    9340682 
\end_layout

\begin_layout Plain Layout

 43 2010    9415570 
\end_layout

\begin_layout Plain Layout

 44 2011    9482855 
\end_layout

\begin_layout Plain Layout

 45 2012    9555893 
\end_layout

\begin_layout Plain Layout

 46 2013    9644864
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section

\family typewriter
gram_schmidt()
\end_layout

\begin_layout Standard
Vi ska nu göra en funktion för gram-schmidt ortogonalisering.
 Vi kommer implementera denna funktion på precis det sätt ni lärt er att
 göra Gram-Schmidt ortogonalisering.
 När vi gör det i datorn kan dock avrundningsfel göra att ortogonaliseringen
 blir numeriskt instabil.
 Mer information om gram-schmidt ortogonalisering finns 
\series bold
\color blue

\begin_inset CommandInset href
LatexCommand href
name "[här]"
target "http://en.wikipedia.org/wiki/Gram%E2%80%93Schmidt_process"

\end_inset


\series default
\color inherit
.
\end_layout

\begin_layout Standard
För att implementera 
\family typewriter
gram_schmidt()
\family default
 föreslås följande strategi:
\end_layout

\begin_layout Enumerate
Börja med att skapa funktionen 
\family typewriter
inner_prod()
\family default
 som tar argumenten 
\family typewriter
x
\family default
 och 
\family typewriter
y
\family default
 och beräknar det inre produktrummet på följande sätt
\begin_inset Formula 
\[
\langle x,y\rangle=\sum_{k=1}^{n}x_{k}y_{k}
\]

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

inner_prod(x = 1:4, y = -1:2)
\end_layout

\begin_layout Plain Layout

inner_prod(x = 10:15, y = -(15:10))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Skapa sedan funktionen 
\family typewriter
proj() 
\family default
som tar argumenten 
\family typewriter
u
\family default
 och 
\family typewriter
v
\family default
 och returnerar projektionsoperatorn:
\begin_inset Formula 
\[
\mbox{proj}_{\mathbf{u}}(\mathbf{v})=\frac{\left\langle \mathbf{v},\mathbf{u}\right\rangle }{\left\langle \mathbf{u},\mathbf{u}\right\rangle }\mathbf{u}
\]

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

proj(u = 1:4, v = -1:2)
\end_layout

\begin_layout Plain Layout

proj(u = 10:15, v = -(15:10))
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Skapa funktionen 
\family typewriter
vec_norm()
\family default
 som tar argumentet 
\family typewriter
x
\family default
 och returnerar en vektornormen.
\begin_inset Formula 
\[
\|\mathbf{x}\|=\sqrt{\sum_{k=1}^{n}x_{k}^{2}}.
\]

\end_inset


\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

vec_norm(x = 1:4)
\end_layout

\begin_layout Plain Layout

vec_norm(x = -1:2)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Enumerate
Med dessa funktioner är det möjligt att sätta ihop funktionen 
\family typewriter
gram_schmidt(X)
\family default
.
 Funktionen ska kunna ta en godtycklig matris och returnera följande ortonormera
de matris.
 
\begin_inset Formula 
\[
\mathbf{E}=\left(\begin{array}{cccc}
\mathbf{e}_{1} & \mathbf{e}_{2} & \cdots & \mathbf{e}_{n}\end{array}\right)
\]

\end_inset


\begin_inset Newline newline
\end_inset

Funktionen ska avbryta och returnera felmeddelandet 
\family typewriter

\begin_inset Quotes sld
\end_inset

Not an object of class matrix.
\begin_inset Quotes srd
\end_inset


\family default
 om 
\family typewriter
X
\family default
 inte är av klassen 
\family typewriter
matrix
\family default
.
\end_layout

\begin_layout Standard

\series bold
Tips!
\series default
 Följande 
\family typewriter
for
\family default
-loop är ett sätt att tänka.
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=FALSE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

for (i in 2:ncol(X)){
\end_layout

\begin_layout Plain Layout

  for (j in 2:i){}   
\end_layout

\begin_layout Plain Layout

}
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Nedan är två exempel på hur funktionen ska fungera.
\begin_inset Newline newline
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

<<eval=TRUE,echo=TRUE>>=
\end_layout

\begin_layout Plain Layout

A <- matrix(c(3,1,2,2), ncol=2)
\end_layout

\begin_layout Plain Layout

gram_schmidt(X = A)
\end_layout

\begin_layout Plain Layout

B <- matrix(c(1,-1,1,1,0,1,1,1,2), ncol=3)
\end_layout

\begin_layout Plain Layout

gram_schmidt(X = B)
\end_layout

\begin_layout Plain Layout

@
\end_layout

\end_inset


\end_layout

\begin_layout Section
Miniprojektet del I
\end_layout

\begin_layout Standard
En de av denna laboration är att genomföra miniprojektet del I.
 Se kurshemsidan för detaljer.
\end_layout

\end_body
\end_document
